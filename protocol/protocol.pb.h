// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protocol.proto

#ifndef PROTOBUF_protocol_2eproto__INCLUDED
#define PROTOBUF_protocol_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3002000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3002000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace spaceless {
namespace protocol {
class ReqLoginUser;
class ReqLoginUserDefaultTypeInternal;
extern ReqLoginUserDefaultTypeInternal _ReqLoginUser_default_instance_;
class ReqRegisterUser;
class ReqRegisterUserDefaultTypeInternal;
extern ReqRegisterUserDefaultTypeInternal _ReqRegisterUser_default_instance_;
class ReqRemoveUser;
class ReqRemoveUserDefaultTypeInternal;
extern ReqRemoveUserDefaultTypeInternal _ReqRemoveUser_default_instance_;
class RspLoginUser;
class RspLoginUserDefaultTypeInternal;
extern RspLoginUserDefaultTypeInternal _RspLoginUser_default_instance_;
class RspRegisterUser;
class RspRegisterUserDefaultTypeInternal;
extern RspRegisterUserDefaultTypeInternal _RspRegisterUser_default_instance_;
class RspRemoveUser;
class RspRemoveUserDefaultTypeInternal;
extern RspRemoveUserDefaultTypeInternal _RspRemoveUser_default_instance_;
class User;
class UserDefaultTypeInternal;
extern UserDefaultTypeInternal _User_default_instance_;
}  // namespace protocol
}  // namespace spaceless

namespace spaceless {
namespace protocol {

namespace protobuf_protocol_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_protocol_2eproto

// ===================================================================

class ReqRegisterUser : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:spaceless.protocol.ReqRegisterUser) */ {
 public:
  ReqRegisterUser();
  virtual ~ReqRegisterUser();

  ReqRegisterUser(const ReqRegisterUser& from);

  inline ReqRegisterUser& operator=(const ReqRegisterUser& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqRegisterUser& default_instance();

  static inline const ReqRegisterUser* internal_default_instance() {
    return reinterpret_cast<const ReqRegisterUser*>(
               &_ReqRegisterUser_default_instance_);
  }

  void Swap(ReqRegisterUser* other);

  // implements Message ----------------------------------------------

  inline ReqRegisterUser* New() const PROTOBUF_FINAL { return New(NULL); }

  ReqRegisterUser* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ReqRegisterUser& from);
  void MergeFrom(const ReqRegisterUser& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ReqRegisterUser* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string username = 1;
  void clear_username();
  static const int kUsernameFieldNumber = 1;
  const ::std::string& username() const;
  void set_username(const ::std::string& value);
  #if LANG_CXX11
  void set_username(::std::string&& value);
  #endif
  void set_username(const char* value);
  void set_username(const char* value, size_t size);
  ::std::string* mutable_username();
  ::std::string* release_username();
  void set_allocated_username(::std::string* username);

  // string password = 2;
  void clear_password();
  static const int kPasswordFieldNumber = 2;
  const ::std::string& password() const;
  void set_password(const ::std::string& value);
  #if LANG_CXX11
  void set_password(::std::string&& value);
  #endif
  void set_password(const char* value);
  void set_password(const char* value, size_t size);
  ::std::string* mutable_password();
  ::std::string* release_password();
  void set_allocated_password(::std::string* password);

  // @@protoc_insertion_point(class_scope:spaceless.protocol.ReqRegisterUser)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr username_;
  ::google::protobuf::internal::ArenaStringPtr password_;
  mutable int _cached_size_;
  friend struct  protobuf_protocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class User : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:spaceless.protocol.User) */ {
 public:
  User();
  virtual ~User();

  User(const User& from);

  inline User& operator=(const User& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const User& default_instance();

  static inline const User* internal_default_instance() {
    return reinterpret_cast<const User*>(
               &_User_default_instance_);
  }

  void Swap(User* other);

  // implements Message ----------------------------------------------

  inline User* New() const PROTOBUF_FINAL { return New(NULL); }

  User* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const User& from);
  void MergeFrom(const User& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(User* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 group_list = 3;
  int group_list_size() const;
  void clear_group_list();
  static const int kGroupListFieldNumber = 3;
  ::google::protobuf::int32 group_list(int index) const;
  void set_group_list(int index, ::google::protobuf::int32 value);
  void add_group_list(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      group_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_group_list();

  // string name = 2;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // int32 uid = 1;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  ::google::protobuf::int32 uid() const;
  void set_uid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:spaceless.protocol.User)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > group_list_;
  mutable int _group_list_cached_byte_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::int32 uid_;
  mutable int _cached_size_;
  friend struct  protobuf_protocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RspRegisterUser : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:spaceless.protocol.RspRegisterUser) */ {
 public:
  RspRegisterUser();
  virtual ~RspRegisterUser();

  RspRegisterUser(const RspRegisterUser& from);

  inline RspRegisterUser& operator=(const RspRegisterUser& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RspRegisterUser& default_instance();

  static inline const RspRegisterUser* internal_default_instance() {
    return reinterpret_cast<const RspRegisterUser*>(
               &_RspRegisterUser_default_instance_);
  }

  void Swap(RspRegisterUser* other);

  // implements Message ----------------------------------------------

  inline RspRegisterUser* New() const PROTOBUF_FINAL { return New(NULL); }

  RspRegisterUser* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RspRegisterUser& from);
  void MergeFrom(const RspRegisterUser& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RspRegisterUser* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .spaceless.protocol.User user = 2;
  bool has_user() const;
  void clear_user();
  static const int kUserFieldNumber = 2;
  const ::spaceless::protocol::User& user() const;
  ::spaceless::protocol::User* mutable_user();
  ::spaceless::protocol::User* release_user();
  void set_allocated_user(::spaceless::protocol::User* user);

  // int32 result = 1;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:spaceless.protocol.RspRegisterUser)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::spaceless::protocol::User* user_;
  ::google::protobuf::int32 result_;
  mutable int _cached_size_;
  friend struct  protobuf_protocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ReqLoginUser : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:spaceless.protocol.ReqLoginUser) */ {
 public:
  ReqLoginUser();
  virtual ~ReqLoginUser();

  ReqLoginUser(const ReqLoginUser& from);

  inline ReqLoginUser& operator=(const ReqLoginUser& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqLoginUser& default_instance();

  static inline const ReqLoginUser* internal_default_instance() {
    return reinterpret_cast<const ReqLoginUser*>(
               &_ReqLoginUser_default_instance_);
  }

  void Swap(ReqLoginUser* other);

  // implements Message ----------------------------------------------

  inline ReqLoginUser* New() const PROTOBUF_FINAL { return New(NULL); }

  ReqLoginUser* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ReqLoginUser& from);
  void MergeFrom(const ReqLoginUser& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ReqLoginUser* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string password = 2;
  void clear_password();
  static const int kPasswordFieldNumber = 2;
  const ::std::string& password() const;
  void set_password(const ::std::string& value);
  #if LANG_CXX11
  void set_password(::std::string&& value);
  #endif
  void set_password(const char* value);
  void set_password(const char* value, size_t size);
  ::std::string* mutable_password();
  ::std::string* release_password();
  void set_allocated_password(::std::string* password);

  // int32 uid = 1;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  ::google::protobuf::int32 uid() const;
  void set_uid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:spaceless.protocol.ReqLoginUser)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr password_;
  ::google::protobuf::int32 uid_;
  mutable int _cached_size_;
  friend struct  protobuf_protocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RspLoginUser : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:spaceless.protocol.RspLoginUser) */ {
 public:
  RspLoginUser();
  virtual ~RspLoginUser();

  RspLoginUser(const RspLoginUser& from);

  inline RspLoginUser& operator=(const RspLoginUser& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RspLoginUser& default_instance();

  static inline const RspLoginUser* internal_default_instance() {
    return reinterpret_cast<const RspLoginUser*>(
               &_RspLoginUser_default_instance_);
  }

  void Swap(RspLoginUser* other);

  // implements Message ----------------------------------------------

  inline RspLoginUser* New() const PROTOBUF_FINAL { return New(NULL); }

  RspLoginUser* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RspLoginUser& from);
  void MergeFrom(const RspLoginUser& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RspLoginUser* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bool result = 1;
  void clear_result();
  static const int kResultFieldNumber = 1;
  bool result() const;
  void set_result(bool value);

  // @@protoc_insertion_point(class_scope:spaceless.protocol.RspLoginUser)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool result_;
  mutable int _cached_size_;
  friend struct  protobuf_protocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ReqRemoveUser : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:spaceless.protocol.ReqRemoveUser) */ {
 public:
  ReqRemoveUser();
  virtual ~ReqRemoveUser();

  ReqRemoveUser(const ReqRemoveUser& from);

  inline ReqRemoveUser& operator=(const ReqRemoveUser& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqRemoveUser& default_instance();

  static inline const ReqRemoveUser* internal_default_instance() {
    return reinterpret_cast<const ReqRemoveUser*>(
               &_ReqRemoveUser_default_instance_);
  }

  void Swap(ReqRemoveUser* other);

  // implements Message ----------------------------------------------

  inline ReqRemoveUser* New() const PROTOBUF_FINAL { return New(NULL); }

  ReqRemoveUser* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ReqRemoveUser& from);
  void MergeFrom(const ReqRemoveUser& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ReqRemoveUser* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 uid = 1;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  ::google::protobuf::int32 uid() const;
  void set_uid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:spaceless.protocol.ReqRemoveUser)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 uid_;
  mutable int _cached_size_;
  friend struct  protobuf_protocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RspRemoveUser : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:spaceless.protocol.RspRemoveUser) */ {
 public:
  RspRemoveUser();
  virtual ~RspRemoveUser();

  RspRemoveUser(const RspRemoveUser& from);

  inline RspRemoveUser& operator=(const RspRemoveUser& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RspRemoveUser& default_instance();

  static inline const RspRemoveUser* internal_default_instance() {
    return reinterpret_cast<const RspRemoveUser*>(
               &_RspRemoveUser_default_instance_);
  }

  void Swap(RspRemoveUser* other);

  // implements Message ----------------------------------------------

  inline RspRemoveUser* New() const PROTOBUF_FINAL { return New(NULL); }

  RspRemoveUser* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RspRemoveUser& from);
  void MergeFrom(const RspRemoveUser& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RspRemoveUser* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bool result = 1;
  void clear_result();
  static const int kResultFieldNumber = 1;
  bool result() const;
  void set_result(bool value);

  // @@protoc_insertion_point(class_scope:spaceless.protocol.RspRemoveUser)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool result_;
  mutable int _cached_size_;
  friend struct  protobuf_protocol_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// ReqRegisterUser

// string username = 1;
inline void ReqRegisterUser::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ReqRegisterUser::username() const {
  // @@protoc_insertion_point(field_get:spaceless.protocol.ReqRegisterUser.username)
  return username_.GetNoArena();
}
inline void ReqRegisterUser::set_username(const ::std::string& value) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:spaceless.protocol.ReqRegisterUser.username)
}
#if LANG_CXX11
inline void ReqRegisterUser::set_username(::std::string&& value) {
  
  username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:spaceless.protocol.ReqRegisterUser.username)
}
#endif
inline void ReqRegisterUser::set_username(const char* value) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:spaceless.protocol.ReqRegisterUser.username)
}
inline void ReqRegisterUser::set_username(const char* value, size_t size) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:spaceless.protocol.ReqRegisterUser.username)
}
inline ::std::string* ReqRegisterUser::mutable_username() {
  
  // @@protoc_insertion_point(field_mutable:spaceless.protocol.ReqRegisterUser.username)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ReqRegisterUser::release_username() {
  // @@protoc_insertion_point(field_release:spaceless.protocol.ReqRegisterUser.username)
  
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReqRegisterUser::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    
  } else {
    
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:spaceless.protocol.ReqRegisterUser.username)
}

// string password = 2;
inline void ReqRegisterUser::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ReqRegisterUser::password() const {
  // @@protoc_insertion_point(field_get:spaceless.protocol.ReqRegisterUser.password)
  return password_.GetNoArena();
}
inline void ReqRegisterUser::set_password(const ::std::string& value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:spaceless.protocol.ReqRegisterUser.password)
}
#if LANG_CXX11
inline void ReqRegisterUser::set_password(::std::string&& value) {
  
  password_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:spaceless.protocol.ReqRegisterUser.password)
}
#endif
inline void ReqRegisterUser::set_password(const char* value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:spaceless.protocol.ReqRegisterUser.password)
}
inline void ReqRegisterUser::set_password(const char* value, size_t size) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:spaceless.protocol.ReqRegisterUser.password)
}
inline ::std::string* ReqRegisterUser::mutable_password() {
  
  // @@protoc_insertion_point(field_mutable:spaceless.protocol.ReqRegisterUser.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ReqRegisterUser::release_password() {
  // @@protoc_insertion_point(field_release:spaceless.protocol.ReqRegisterUser.password)
  
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReqRegisterUser::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    
  } else {
    
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:spaceless.protocol.ReqRegisterUser.password)
}

// -------------------------------------------------------------------

// User

// int32 uid = 1;
inline void User::clear_uid() {
  uid_ = 0;
}
inline ::google::protobuf::int32 User::uid() const {
  // @@protoc_insertion_point(field_get:spaceless.protocol.User.uid)
  return uid_;
}
inline void User::set_uid(::google::protobuf::int32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:spaceless.protocol.User.uid)
}

// string name = 2;
inline void User::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& User::name() const {
  // @@protoc_insertion_point(field_get:spaceless.protocol.User.name)
  return name_.GetNoArena();
}
inline void User::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:spaceless.protocol.User.name)
}
#if LANG_CXX11
inline void User::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:spaceless.protocol.User.name)
}
#endif
inline void User::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:spaceless.protocol.User.name)
}
inline void User::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:spaceless.protocol.User.name)
}
inline ::std::string* User::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:spaceless.protocol.User.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* User::release_name() {
  // @@protoc_insertion_point(field_release:spaceless.protocol.User.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void User::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:spaceless.protocol.User.name)
}

// repeated int32 group_list = 3;
inline int User::group_list_size() const {
  return group_list_.size();
}
inline void User::clear_group_list() {
  group_list_.Clear();
}
inline ::google::protobuf::int32 User::group_list(int index) const {
  // @@protoc_insertion_point(field_get:spaceless.protocol.User.group_list)
  return group_list_.Get(index);
}
inline void User::set_group_list(int index, ::google::protobuf::int32 value) {
  group_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:spaceless.protocol.User.group_list)
}
inline void User::add_group_list(::google::protobuf::int32 value) {
  group_list_.Add(value);
  // @@protoc_insertion_point(field_add:spaceless.protocol.User.group_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
User::group_list() const {
  // @@protoc_insertion_point(field_list:spaceless.protocol.User.group_list)
  return group_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
User::mutable_group_list() {
  // @@protoc_insertion_point(field_mutable_list:spaceless.protocol.User.group_list)
  return &group_list_;
}

// -------------------------------------------------------------------

// RspRegisterUser

// int32 result = 1;
inline void RspRegisterUser::clear_result() {
  result_ = 0;
}
inline ::google::protobuf::int32 RspRegisterUser::result() const {
  // @@protoc_insertion_point(field_get:spaceless.protocol.RspRegisterUser.result)
  return result_;
}
inline void RspRegisterUser::set_result(::google::protobuf::int32 value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:spaceless.protocol.RspRegisterUser.result)
}

// .spaceless.protocol.User user = 2;
inline bool RspRegisterUser::has_user() const {
  return this != internal_default_instance() && user_ != NULL;
}
inline void RspRegisterUser::clear_user() {
  if (GetArenaNoVirtual() == NULL && user_ != NULL) delete user_;
  user_ = NULL;
}
inline const ::spaceless::protocol::User& RspRegisterUser::user() const {
  // @@protoc_insertion_point(field_get:spaceless.protocol.RspRegisterUser.user)
  return user_ != NULL ? *user_
                         : *::spaceless::protocol::User::internal_default_instance();
}
inline ::spaceless::protocol::User* RspRegisterUser::mutable_user() {
  
  if (user_ == NULL) {
    user_ = new ::spaceless::protocol::User;
  }
  // @@protoc_insertion_point(field_mutable:spaceless.protocol.RspRegisterUser.user)
  return user_;
}
inline ::spaceless::protocol::User* RspRegisterUser::release_user() {
  // @@protoc_insertion_point(field_release:spaceless.protocol.RspRegisterUser.user)
  
  ::spaceless::protocol::User* temp = user_;
  user_ = NULL;
  return temp;
}
inline void RspRegisterUser::set_allocated_user(::spaceless::protocol::User* user) {
  delete user_;
  user_ = user;
  if (user) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:spaceless.protocol.RspRegisterUser.user)
}

// -------------------------------------------------------------------

// ReqLoginUser

// int32 uid = 1;
inline void ReqLoginUser::clear_uid() {
  uid_ = 0;
}
inline ::google::protobuf::int32 ReqLoginUser::uid() const {
  // @@protoc_insertion_point(field_get:spaceless.protocol.ReqLoginUser.uid)
  return uid_;
}
inline void ReqLoginUser::set_uid(::google::protobuf::int32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:spaceless.protocol.ReqLoginUser.uid)
}

// string password = 2;
inline void ReqLoginUser::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ReqLoginUser::password() const {
  // @@protoc_insertion_point(field_get:spaceless.protocol.ReqLoginUser.password)
  return password_.GetNoArena();
}
inline void ReqLoginUser::set_password(const ::std::string& value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:spaceless.protocol.ReqLoginUser.password)
}
#if LANG_CXX11
inline void ReqLoginUser::set_password(::std::string&& value) {
  
  password_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:spaceless.protocol.ReqLoginUser.password)
}
#endif
inline void ReqLoginUser::set_password(const char* value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:spaceless.protocol.ReqLoginUser.password)
}
inline void ReqLoginUser::set_password(const char* value, size_t size) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:spaceless.protocol.ReqLoginUser.password)
}
inline ::std::string* ReqLoginUser::mutable_password() {
  
  // @@protoc_insertion_point(field_mutable:spaceless.protocol.ReqLoginUser.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ReqLoginUser::release_password() {
  // @@protoc_insertion_point(field_release:spaceless.protocol.ReqLoginUser.password)
  
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReqLoginUser::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    
  } else {
    
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:spaceless.protocol.ReqLoginUser.password)
}

// -------------------------------------------------------------------

// RspLoginUser

// bool result = 1;
inline void RspLoginUser::clear_result() {
  result_ = false;
}
inline bool RspLoginUser::result() const {
  // @@protoc_insertion_point(field_get:spaceless.protocol.RspLoginUser.result)
  return result_;
}
inline void RspLoginUser::set_result(bool value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:spaceless.protocol.RspLoginUser.result)
}

// -------------------------------------------------------------------

// ReqRemoveUser

// int32 uid = 1;
inline void ReqRemoveUser::clear_uid() {
  uid_ = 0;
}
inline ::google::protobuf::int32 ReqRemoveUser::uid() const {
  // @@protoc_insertion_point(field_get:spaceless.protocol.ReqRemoveUser.uid)
  return uid_;
}
inline void ReqRemoveUser::set_uid(::google::protobuf::int32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:spaceless.protocol.ReqRemoveUser.uid)
}

// -------------------------------------------------------------------

// RspRemoveUser

// bool result = 1;
inline void RspRemoveUser::clear_result() {
  result_ = false;
}
inline bool RspRemoveUser::result() const {
  // @@protoc_insertion_point(field_get:spaceless.protocol.RspRemoveUser.result)
  return result_;
}
inline void RspRemoveUser::set_result(bool value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:spaceless.protocol.RspRemoveUser.result)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace protocol
}  // namespace spaceless

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_protocol_2eproto__INCLUDED
