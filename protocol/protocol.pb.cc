// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protocol.proto

#include "protocol.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_protocol_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_protocol_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_FileFragment;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_protocol_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_SharingGroup;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_protocol_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_User;
}  // namespace protobuf_protocol_2eproto
namespace spaceless {
namespace protocol {
class RspErrorDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RspError>
      _instance;
} _RspError_default_instance_;
class UserDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<User>
      _instance;
} _User_default_instance_;
class ReqRegisterUserDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ReqRegisterUser>
      _instance;
} _ReqRegisterUser_default_instance_;
class RspRegisterUserDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RspRegisterUser>
      _instance;
} _RspRegisterUser_default_instance_;
class ReqLoginUserDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ReqLoginUser>
      _instance;
} _ReqLoginUser_default_instance_;
class RspLoginUserDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RspLoginUser>
      _instance;
} _RspLoginUser_default_instance_;
class ReqRemoveUserDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ReqRemoveUser>
      _instance;
} _ReqRemoveUser_default_instance_;
class RspRemoveUserDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RspRemoveUser>
      _instance;
} _RspRemoveUser_default_instance_;
class ReqFindUserDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ReqFindUser>
      _instance;
} _ReqFindUser_default_instance_;
class RspFindUserDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RspFindUser>
      _instance;
} _RspFindUser_default_instance_;
class SharingGroupDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SharingGroup>
      _instance;
} _SharingGroup_default_instance_;
class ReqRegisterGroupDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ReqRegisterGroup>
      _instance;
} _ReqRegisterGroup_default_instance_;
class RspRegisterGroupDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RspRegisterGroup>
      _instance;
} _RspRegisterGroup_default_instance_;
class ReqRemoveGroupDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ReqRemoveGroup>
      _instance;
} _ReqRemoveGroup_default_instance_;
class RspRemoveGroupDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RspRemoveGroup>
      _instance;
} _RspRemoveGroup_default_instance_;
class ReqFindGroupDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ReqFindGroup>
      _instance;
} _ReqFindGroup_default_instance_;
class RspFindGroupDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RspFindGroup>
      _instance;
} _RspFindGroup_default_instance_;
class ReqJoinGroupDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ReqJoinGroup>
      _instance;
} _ReqJoinGroup_default_instance_;
class RspJoinGroupDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RspJoinGroup>
      _instance;
} _RspJoinGroup_default_instance_;
class ReqAssignAsManagerDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ReqAssignAsManager>
      _instance;
} _ReqAssignAsManager_default_instance_;
class RspAssignAsManagerDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RspAssignAsManager>
      _instance;
} _RspAssignAsManager_default_instance_;
class ReqAssignAsMemeberDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ReqAssignAsMemeber>
      _instance;
} _ReqAssignAsMemeber_default_instance_;
class RspAssignAsMemeberDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RspAssignAsMemeber>
      _instance;
} _RspAssignAsMemeber_default_instance_;
class ReqKickOutUserDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ReqKickOutUser>
      _instance;
} _ReqKickOutUser_default_instance_;
class RspKickOutUserDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RspKickOutUser>
      _instance;
} _RspKickOutUser_default_instance_;
class FileFragmentDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FileFragment>
      _instance;
} _FileFragment_default_instance_;
class ReqPutFileDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ReqPutFile>
      _instance;
} _ReqPutFile_default_instance_;
class RspPutFileDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RspPutFile>
      _instance;
} _RspPutFile_default_instance_;
class ReqGetFileDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ReqGetFile>
      _instance;
} _ReqGetFile_default_instance_;
class RspGetFileDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RspGetFile>
      _instance;
} _RspGetFile_default_instance_;
class ReqCreatePathDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ReqCreatePath>
      _instance;
} _ReqCreatePath_default_instance_;
class RspCreatePathDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RspCreatePath>
      _instance;
} _RspCreatePath_default_instance_;
class ReqRemovePathDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ReqRemovePath>
      _instance;
} _ReqRemovePath_default_instance_;
class RspRemovePathDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RspRemovePath>
      _instance;
} _RspRemovePath_default_instance_;
}  // namespace protocol
}  // namespace spaceless
namespace protobuf_protocol_2eproto {
static void InitDefaultsRspError() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::spaceless::protocol::_RspError_default_instance_;
    new (ptr) ::spaceless::protocol::RspError();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::spaceless::protocol::RspError::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RspError =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRspError}, {}};

static void InitDefaultsUser() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::spaceless::protocol::_User_default_instance_;
    new (ptr) ::spaceless::protocol::User();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::spaceless::protocol::User::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_User =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsUser}, {}};

static void InitDefaultsReqRegisterUser() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::spaceless::protocol::_ReqRegisterUser_default_instance_;
    new (ptr) ::spaceless::protocol::ReqRegisterUser();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::spaceless::protocol::ReqRegisterUser::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ReqRegisterUser =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsReqRegisterUser}, {}};

static void InitDefaultsRspRegisterUser() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::spaceless::protocol::_RspRegisterUser_default_instance_;
    new (ptr) ::spaceless::protocol::RspRegisterUser();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::spaceless::protocol::RspRegisterUser::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_RspRegisterUser =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsRspRegisterUser}, {
      &protobuf_protocol_2eproto::scc_info_User.base,}};

static void InitDefaultsReqLoginUser() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::spaceless::protocol::_ReqLoginUser_default_instance_;
    new (ptr) ::spaceless::protocol::ReqLoginUser();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::spaceless::protocol::ReqLoginUser::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ReqLoginUser =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsReqLoginUser}, {}};

static void InitDefaultsRspLoginUser() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::spaceless::protocol::_RspLoginUser_default_instance_;
    new (ptr) ::spaceless::protocol::RspLoginUser();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::spaceless::protocol::RspLoginUser::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RspLoginUser =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRspLoginUser}, {}};

static void InitDefaultsReqRemoveUser() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::spaceless::protocol::_ReqRemoveUser_default_instance_;
    new (ptr) ::spaceless::protocol::ReqRemoveUser();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::spaceless::protocol::ReqRemoveUser::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ReqRemoveUser =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsReqRemoveUser}, {}};

static void InitDefaultsRspRemoveUser() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::spaceless::protocol::_RspRemoveUser_default_instance_;
    new (ptr) ::spaceless::protocol::RspRemoveUser();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::spaceless::protocol::RspRemoveUser::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RspRemoveUser =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRspRemoveUser}, {}};

static void InitDefaultsReqFindUser() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::spaceless::protocol::_ReqFindUser_default_instance_;
    new (ptr) ::spaceless::protocol::ReqFindUser();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::spaceless::protocol::ReqFindUser::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ReqFindUser =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsReqFindUser}, {}};

static void InitDefaultsRspFindUser() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::spaceless::protocol::_RspFindUser_default_instance_;
    new (ptr) ::spaceless::protocol::RspFindUser();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::spaceless::protocol::RspFindUser::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_RspFindUser =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsRspFindUser}, {
      &protobuf_protocol_2eproto::scc_info_User.base,}};

static void InitDefaultsSharingGroup() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::spaceless::protocol::_SharingGroup_default_instance_;
    new (ptr) ::spaceless::protocol::SharingGroup();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::spaceless::protocol::SharingGroup::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SharingGroup =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSharingGroup}, {}};

static void InitDefaultsReqRegisterGroup() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::spaceless::protocol::_ReqRegisterGroup_default_instance_;
    new (ptr) ::spaceless::protocol::ReqRegisterGroup();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::spaceless::protocol::ReqRegisterGroup::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ReqRegisterGroup =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsReqRegisterGroup}, {}};

static void InitDefaultsRspRegisterGroup() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::spaceless::protocol::_RspRegisterGroup_default_instance_;
    new (ptr) ::spaceless::protocol::RspRegisterGroup();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::spaceless::protocol::RspRegisterGroup::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RspRegisterGroup =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRspRegisterGroup}, {}};

static void InitDefaultsReqRemoveGroup() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::spaceless::protocol::_ReqRemoveGroup_default_instance_;
    new (ptr) ::spaceless::protocol::ReqRemoveGroup();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::spaceless::protocol::ReqRemoveGroup::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ReqRemoveGroup =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsReqRemoveGroup}, {}};

static void InitDefaultsRspRemoveGroup() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::spaceless::protocol::_RspRemoveGroup_default_instance_;
    new (ptr) ::spaceless::protocol::RspRemoveGroup();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::spaceless::protocol::RspRemoveGroup::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RspRemoveGroup =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRspRemoveGroup}, {}};

static void InitDefaultsReqFindGroup() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::spaceless::protocol::_ReqFindGroup_default_instance_;
    new (ptr) ::spaceless::protocol::ReqFindGroup();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::spaceless::protocol::ReqFindGroup::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ReqFindGroup =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsReqFindGroup}, {}};

static void InitDefaultsRspFindGroup() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::spaceless::protocol::_RspFindGroup_default_instance_;
    new (ptr) ::spaceless::protocol::RspFindGroup();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::spaceless::protocol::RspFindGroup::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_RspFindGroup =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsRspFindGroup}, {
      &protobuf_protocol_2eproto::scc_info_SharingGroup.base,}};

static void InitDefaultsReqJoinGroup() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::spaceless::protocol::_ReqJoinGroup_default_instance_;
    new (ptr) ::spaceless::protocol::ReqJoinGroup();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::spaceless::protocol::ReqJoinGroup::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ReqJoinGroup =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsReqJoinGroup}, {}};

static void InitDefaultsRspJoinGroup() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::spaceless::protocol::_RspJoinGroup_default_instance_;
    new (ptr) ::spaceless::protocol::RspJoinGroup();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::spaceless::protocol::RspJoinGroup::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RspJoinGroup =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRspJoinGroup}, {}};

static void InitDefaultsReqAssignAsManager() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::spaceless::protocol::_ReqAssignAsManager_default_instance_;
    new (ptr) ::spaceless::protocol::ReqAssignAsManager();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::spaceless::protocol::ReqAssignAsManager::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ReqAssignAsManager =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsReqAssignAsManager}, {}};

static void InitDefaultsRspAssignAsManager() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::spaceless::protocol::_RspAssignAsManager_default_instance_;
    new (ptr) ::spaceless::protocol::RspAssignAsManager();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::spaceless::protocol::RspAssignAsManager::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RspAssignAsManager =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRspAssignAsManager}, {}};

static void InitDefaultsReqAssignAsMemeber() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::spaceless::protocol::_ReqAssignAsMemeber_default_instance_;
    new (ptr) ::spaceless::protocol::ReqAssignAsMemeber();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::spaceless::protocol::ReqAssignAsMemeber::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ReqAssignAsMemeber =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsReqAssignAsMemeber}, {}};

static void InitDefaultsRspAssignAsMemeber() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::spaceless::protocol::_RspAssignAsMemeber_default_instance_;
    new (ptr) ::spaceless::protocol::RspAssignAsMemeber();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::spaceless::protocol::RspAssignAsMemeber::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RspAssignAsMemeber =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRspAssignAsMemeber}, {}};

static void InitDefaultsReqKickOutUser() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::spaceless::protocol::_ReqKickOutUser_default_instance_;
    new (ptr) ::spaceless::protocol::ReqKickOutUser();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::spaceless::protocol::ReqKickOutUser::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ReqKickOutUser =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsReqKickOutUser}, {}};

static void InitDefaultsRspKickOutUser() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::spaceless::protocol::_RspKickOutUser_default_instance_;
    new (ptr) ::spaceless::protocol::RspKickOutUser();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::spaceless::protocol::RspKickOutUser::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RspKickOutUser =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRspKickOutUser}, {}};

static void InitDefaultsFileFragment() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::spaceless::protocol::_FileFragment_default_instance_;
    new (ptr) ::spaceless::protocol::FileFragment();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::spaceless::protocol::FileFragment::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_FileFragment =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsFileFragment}, {}};

static void InitDefaultsReqPutFile() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::spaceless::protocol::_ReqPutFile_default_instance_;
    new (ptr) ::spaceless::protocol::ReqPutFile();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::spaceless::protocol::ReqPutFile::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ReqPutFile =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsReqPutFile}, {
      &protobuf_protocol_2eproto::scc_info_FileFragment.base,}};

static void InitDefaultsRspPutFile() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::spaceless::protocol::_RspPutFile_default_instance_;
    new (ptr) ::spaceless::protocol::RspPutFile();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::spaceless::protocol::RspPutFile::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RspPutFile =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRspPutFile}, {}};

static void InitDefaultsReqGetFile() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::spaceless::protocol::_ReqGetFile_default_instance_;
    new (ptr) ::spaceless::protocol::ReqGetFile();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::spaceless::protocol::ReqGetFile::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ReqGetFile =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsReqGetFile}, {}};

static void InitDefaultsRspGetFile() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::spaceless::protocol::_RspGetFile_default_instance_;
    new (ptr) ::spaceless::protocol::RspGetFile();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::spaceless::protocol::RspGetFile::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_RspGetFile =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsRspGetFile}, {
      &protobuf_protocol_2eproto::scc_info_FileFragment.base,}};

static void InitDefaultsReqCreatePath() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::spaceless::protocol::_ReqCreatePath_default_instance_;
    new (ptr) ::spaceless::protocol::ReqCreatePath();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::spaceless::protocol::ReqCreatePath::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ReqCreatePath =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsReqCreatePath}, {}};

static void InitDefaultsRspCreatePath() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::spaceless::protocol::_RspCreatePath_default_instance_;
    new (ptr) ::spaceless::protocol::RspCreatePath();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::spaceless::protocol::RspCreatePath::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RspCreatePath =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRspCreatePath}, {}};

static void InitDefaultsReqRemovePath() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::spaceless::protocol::_ReqRemovePath_default_instance_;
    new (ptr) ::spaceless::protocol::ReqRemovePath();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::spaceless::protocol::ReqRemovePath::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ReqRemovePath =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsReqRemovePath}, {}};

static void InitDefaultsRspRemovePath() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::spaceless::protocol::_RspRemovePath_default_instance_;
    new (ptr) ::spaceless::protocol::RspRemovePath();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::spaceless::protocol::RspRemovePath::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RspRemovePath =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRspRemovePath}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_RspError.base);
  ::google::protobuf::internal::InitSCC(&scc_info_User.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ReqRegisterUser.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RspRegisterUser.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ReqLoginUser.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RspLoginUser.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ReqRemoveUser.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RspRemoveUser.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ReqFindUser.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RspFindUser.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SharingGroup.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ReqRegisterGroup.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RspRegisterGroup.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ReqRemoveGroup.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RspRemoveGroup.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ReqFindGroup.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RspFindGroup.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ReqJoinGroup.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RspJoinGroup.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ReqAssignAsManager.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RspAssignAsManager.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ReqAssignAsMemeber.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RspAssignAsMemeber.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ReqKickOutUser.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RspKickOutUser.base);
  ::google::protobuf::internal::InitSCC(&scc_info_FileFragment.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ReqPutFile.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RspPutFile.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ReqGetFile.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RspGetFile.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ReqCreatePath.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RspCreatePath.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ReqRemovePath.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RspRemovePath.base);
}

::google::protobuf::Metadata file_level_metadata[34];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::spaceless::protocol::RspError, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::spaceless::protocol::RspError, result_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::spaceless::protocol::User, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::spaceless::protocol::User, user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::spaceless::protocol::User, user_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::spaceless::protocol::User, group_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::spaceless::protocol::ReqRegisterUser, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::spaceless::protocol::ReqRegisterUser, username_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::spaceless::protocol::ReqRegisterUser, password_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::spaceless::protocol::RspRegisterUser, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::spaceless::protocol::RspRegisterUser, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::spaceless::protocol::RspRegisterUser, user_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::spaceless::protocol::ReqLoginUser, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::spaceless::protocol::ReqLoginUser, user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::spaceless::protocol::ReqLoginUser, password_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::spaceless::protocol::RspLoginUser, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::spaceless::protocol::RspLoginUser, result_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::spaceless::protocol::ReqRemoveUser, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::spaceless::protocol::ReqRemoveUser, user_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::spaceless::protocol::RspRemoveUser, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::spaceless::protocol::RspRemoveUser, result_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::spaceless::protocol::ReqFindUser, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::spaceless::protocol::ReqFindUser, user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::spaceless::protocol::ReqFindUser, username_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::spaceless::protocol::RspFindUser, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::spaceless::protocol::RspFindUser, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::spaceless::protocol::RspFindUser, user_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::spaceless::protocol::SharingGroup, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::spaceless::protocol::SharingGroup, group_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::spaceless::protocol::SharingGroup, group_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::spaceless::protocol::SharingGroup, owner_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::spaceless::protocol::SharingGroup, root_dir_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::spaceless::protocol::SharingGroup, manager_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::spaceless::protocol::SharingGroup, member_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::spaceless::protocol::ReqRegisterGroup, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::spaceless::protocol::ReqRegisterGroup, group_name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::spaceless::protocol::RspRegisterGroup, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::spaceless::protocol::RspRegisterGroup, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::spaceless::protocol::RspRegisterGroup, group_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::spaceless::protocol::ReqRemoveGroup, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::spaceless::protocol::ReqRemoveGroup, group_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::spaceless::protocol::RspRemoveGroup, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::spaceless::protocol::RspRemoveGroup, result_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::spaceless::protocol::ReqFindGroup, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::spaceless::protocol::ReqFindGroup, group_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::spaceless::protocol::ReqFindGroup, group_name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::spaceless::protocol::RspFindGroup, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::spaceless::protocol::RspFindGroup, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::spaceless::protocol::RspFindGroup, group_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::spaceless::protocol::ReqJoinGroup, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::spaceless::protocol::ReqJoinGroup, group_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::spaceless::protocol::RspJoinGroup, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::spaceless::protocol::RspJoinGroup, result_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::spaceless::protocol::ReqAssignAsManager, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::spaceless::protocol::ReqAssignAsManager, group_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::spaceless::protocol::ReqAssignAsManager, user_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::spaceless::protocol::RspAssignAsManager, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::spaceless::protocol::RspAssignAsManager, result_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::spaceless::protocol::ReqAssignAsMemeber, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::spaceless::protocol::ReqAssignAsMemeber, group_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::spaceless::protocol::ReqAssignAsMemeber, user_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::spaceless::protocol::RspAssignAsMemeber, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::spaceless::protocol::RspAssignAsMemeber, result_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::spaceless::protocol::ReqKickOutUser, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::spaceless::protocol::ReqKickOutUser, group_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::spaceless::protocol::ReqKickOutUser, user_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::spaceless::protocol::RspKickOutUser, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::spaceless::protocol::RspKickOutUser, result_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::spaceless::protocol::FileFragment, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::spaceless::protocol::FileFragment, max_fragment_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::spaceless::protocol::FileFragment, fragment_index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::spaceless::protocol::FileFragment, fragment_content_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::spaceless::protocol::ReqPutFile, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::spaceless::protocol::ReqPutFile, group_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::spaceless::protocol::ReqPutFile, file_path_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::spaceless::protocol::ReqPutFile, fragment_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::spaceless::protocol::RspPutFile, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::spaceless::protocol::RspPutFile, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::spaceless::protocol::RspPutFile, fragment_index_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::spaceless::protocol::ReqGetFile, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::spaceless::protocol::ReqGetFile, group_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::spaceless::protocol::ReqGetFile, file_path_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::spaceless::protocol::RspGetFile, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::spaceless::protocol::RspGetFile, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::spaceless::protocol::RspGetFile, fragment_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::spaceless::protocol::ReqCreatePath, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::spaceless::protocol::ReqCreatePath, group_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::spaceless::protocol::ReqCreatePath, path_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::spaceless::protocol::RspCreatePath, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::spaceless::protocol::RspCreatePath, result_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::spaceless::protocol::ReqRemovePath, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::spaceless::protocol::ReqRemovePath, group_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::spaceless::protocol::ReqRemovePath, path_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::spaceless::protocol::ReqRemovePath, force_remove_all_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::spaceless::protocol::RspRemovePath, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::spaceless::protocol::RspRemovePath, result_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::spaceless::protocol::RspError)},
  { 6, -1, sizeof(::spaceless::protocol::User)},
  { 14, -1, sizeof(::spaceless::protocol::ReqRegisterUser)},
  { 21, -1, sizeof(::spaceless::protocol::RspRegisterUser)},
  { 28, -1, sizeof(::spaceless::protocol::ReqLoginUser)},
  { 35, -1, sizeof(::spaceless::protocol::RspLoginUser)},
  { 41, -1, sizeof(::spaceless::protocol::ReqRemoveUser)},
  { 47, -1, sizeof(::spaceless::protocol::RspRemoveUser)},
  { 53, -1, sizeof(::spaceless::protocol::ReqFindUser)},
  { 60, -1, sizeof(::spaceless::protocol::RspFindUser)},
  { 67, -1, sizeof(::spaceless::protocol::SharingGroup)},
  { 78, -1, sizeof(::spaceless::protocol::ReqRegisterGroup)},
  { 84, -1, sizeof(::spaceless::protocol::RspRegisterGroup)},
  { 91, -1, sizeof(::spaceless::protocol::ReqRemoveGroup)},
  { 97, -1, sizeof(::spaceless::protocol::RspRemoveGroup)},
  { 103, -1, sizeof(::spaceless::protocol::ReqFindGroup)},
  { 110, -1, sizeof(::spaceless::protocol::RspFindGroup)},
  { 117, -1, sizeof(::spaceless::protocol::ReqJoinGroup)},
  { 123, -1, sizeof(::spaceless::protocol::RspJoinGroup)},
  { 129, -1, sizeof(::spaceless::protocol::ReqAssignAsManager)},
  { 136, -1, sizeof(::spaceless::protocol::RspAssignAsManager)},
  { 142, -1, sizeof(::spaceless::protocol::ReqAssignAsMemeber)},
  { 149, -1, sizeof(::spaceless::protocol::RspAssignAsMemeber)},
  { 155, -1, sizeof(::spaceless::protocol::ReqKickOutUser)},
  { 162, -1, sizeof(::spaceless::protocol::RspKickOutUser)},
  { 168, -1, sizeof(::spaceless::protocol::FileFragment)},
  { 176, -1, sizeof(::spaceless::protocol::ReqPutFile)},
  { 184, -1, sizeof(::spaceless::protocol::RspPutFile)},
  { 191, -1, sizeof(::spaceless::protocol::ReqGetFile)},
  { 198, -1, sizeof(::spaceless::protocol::RspGetFile)},
  { 205, -1, sizeof(::spaceless::protocol::ReqCreatePath)},
  { 212, -1, sizeof(::spaceless::protocol::RspCreatePath)},
  { 218, -1, sizeof(::spaceless::protocol::ReqRemovePath)},
  { 226, -1, sizeof(::spaceless::protocol::RspRemovePath)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::spaceless::protocol::_RspError_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::spaceless::protocol::_User_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::spaceless::protocol::_ReqRegisterUser_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::spaceless::protocol::_RspRegisterUser_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::spaceless::protocol::_ReqLoginUser_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::spaceless::protocol::_RspLoginUser_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::spaceless::protocol::_ReqRemoveUser_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::spaceless::protocol::_RspRemoveUser_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::spaceless::protocol::_ReqFindUser_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::spaceless::protocol::_RspFindUser_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::spaceless::protocol::_SharingGroup_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::spaceless::protocol::_ReqRegisterGroup_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::spaceless::protocol::_RspRegisterGroup_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::spaceless::protocol::_ReqRemoveGroup_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::spaceless::protocol::_RspRemoveGroup_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::spaceless::protocol::_ReqFindGroup_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::spaceless::protocol::_RspFindGroup_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::spaceless::protocol::_ReqJoinGroup_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::spaceless::protocol::_RspJoinGroup_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::spaceless::protocol::_ReqAssignAsManager_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::spaceless::protocol::_RspAssignAsManager_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::spaceless::protocol::_ReqAssignAsMemeber_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::spaceless::protocol::_RspAssignAsMemeber_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::spaceless::protocol::_ReqKickOutUser_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::spaceless::protocol::_RspKickOutUser_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::spaceless::protocol::_FileFragment_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::spaceless::protocol::_ReqPutFile_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::spaceless::protocol::_RspPutFile_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::spaceless::protocol::_ReqGetFile_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::spaceless::protocol::_RspGetFile_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::spaceless::protocol::_ReqCreatePath_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::spaceless::protocol::_RspCreatePath_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::spaceless::protocol::_ReqRemovePath_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::spaceless::protocol::_RspRemovePath_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "protocol.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 34);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\016protocol.proto\022\022spaceless.protocol\"\032\n\010"
      "RspError\022\016\n\006result\030\001 \001(\005\">\n\004User\022\017\n\007user"
      "_id\030\001 \001(\005\022\021\n\tuser_name\030\002 \001(\t\022\022\n\ngroup_li"
      "st\030\003 \003(\005\"5\n\017ReqRegisterUser\022\020\n\010username\030"
      "\001 \001(\t\022\020\n\010password\030\002 \001(\t\"I\n\017RspRegisterUs"
      "er\022\016\n\006result\030\001 \001(\005\022&\n\004user\030\002 \001(\0132\030.space"
      "less.protocol.User\"1\n\014ReqLoginUser\022\017\n\007us"
      "er_id\030\001 \001(\005\022\020\n\010password\030\002 \001(\t\"\036\n\014RspLogi"
      "nUser\022\016\n\006result\030\001 \001(\005\" \n\rReqRemoveUser\022\017"
      "\n\007user_id\030\001 \001(\005\"\037\n\rRspRemoveUser\022\016\n\006resu"
      "lt\030\001 \001(\005\"0\n\013ReqFindUser\022\017\n\007user_id\030\001 \001(\005"
      "\022\020\n\010username\030\002 \001(\t\"E\n\013RspFindUser\022\016\n\006res"
      "ult\030\001 \001(\005\022&\n\004user\030\002 \001(\0132\030.spaceless.prot"
      "ocol.User\"\206\001\n\014SharingGroup\022\020\n\010group_id\030\001"
      " \001(\005\022\022\n\ngroup_name\030\002 \001(\t\022\020\n\010owner_id\030\003 \001"
      "(\005\022\023\n\013root_dir_id\030\004 \001(\005\022\024\n\014manager_list\030"
      "\005 \003(\005\022\023\n\013member_list\030\006 \003(\005\"&\n\020ReqRegiste"
      "rGroup\022\022\n\ngroup_name\030\001 \001(\t\"4\n\020RspRegiste"
      "rGroup\022\016\n\006result\030\001 \001(\005\022\020\n\010group_id\030\002 \001(\005"
      "\"\"\n\016ReqRemoveGroup\022\020\n\010group_id\030\001 \001(\005\" \n\016"
      "RspRemoveGroup\022\016\n\006result\030\001 \001(\010\"4\n\014ReqFin"
      "dGroup\022\020\n\010group_id\030\001 \001(\005\022\022\n\ngroup_name\030\002"
      " \001(\t\"O\n\014RspFindGroup\022\016\n\006result\030\001 \001(\005\022/\n\005"
      "group\030\002 \001(\0132 .spaceless.protocol.Sharing"
      "Group\" \n\014ReqJoinGroup\022\020\n\010group_id\030\001 \001(\005\""
      "\036\n\014RspJoinGroup\022\016\n\006result\030\001 \001(\005\"7\n\022ReqAs"
      "signAsManager\022\020\n\010group_id\030\001 \001(\005\022\017\n\007user_"
      "id\030\002 \001(\005\"$\n\022RspAssignAsManager\022\016\n\006result"
      "\030\001 \001(\005\"7\n\022ReqAssignAsMemeber\022\020\n\010group_id"
      "\030\001 \001(\005\022\017\n\007user_id\030\002 \001(\005\"$\n\022RspAssignAsMe"
      "meber\022\016\n\006result\030\001 \001(\005\"3\n\016ReqKickOutUser\022"
      "\020\n\010group_id\030\001 \001(\005\022\017\n\007user_id\030\002 \001(\005\" \n\016Rs"
      "pKickOutUser\022\016\n\006result\030\001 \001(\005\"V\n\014FileFrag"
      "ment\022\024\n\014max_fragment\030\001 \001(\005\022\026\n\016fragment_i"
      "ndex\030\002 \001(\005\022\030\n\020fragment_content\030\003 \001(\014\"e\n\n"
      "ReqPutFile\022\020\n\010group_id\030\001 \001(\005\022\021\n\tfile_pat"
      "h\030\002 \001(\t\0222\n\010fragment\030\003 \001(\0132 .spaceless.pr"
      "otocol.FileFragment\"4\n\nRspPutFile\022\016\n\006res"
      "ult\030\001 \001(\005\022\026\n\016fragment_index\030\002 \001(\005\"1\n\nReq"
      "GetFile\022\020\n\010group_id\030\001 \001(\005\022\021\n\tfile_path\030\002"
      " \001(\t\"P\n\nRspGetFile\022\016\n\006result\030\001 \001(\005\0222\n\010fr"
      "agment\030\002 \001(\0132 .spaceless.protocol.FileFr"
      "agment\"/\n\rReqCreatePath\022\020\n\010group_id\030\001 \001("
      "\005\022\014\n\004path\030\002 \001(\t\"\037\n\rRspCreatePath\022\016\n\006resu"
      "lt\030\001 \001(\005\"I\n\rReqRemovePath\022\020\n\010group_id\030\001 "
      "\001(\005\022\014\n\004path\030\002 \001(\t\022\030\n\020force_remove_all\030\003 "
      "\001(\010\"\037\n\rRspRemovePath\022\016\n\006result\030\001 \001(\005*N\n\021"
      "MiscellaneousType\022\031\n\025INVALID_MISCELLANEO"
      "US\020\000\022\036\n\030MAX_FRAGMENT_CONTENT_LEN\020\320\206\003b\006pr"
      "oto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1964);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "protocol.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_protocol_2eproto
namespace spaceless {
namespace protocol {
const ::google::protobuf::EnumDescriptor* MiscellaneousType_descriptor() {
  protobuf_protocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_protocol_2eproto::file_level_enum_descriptors[0];
}
bool MiscellaneousType_IsValid(int value) {
  switch (value) {
    case 0:
    case 50000:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void RspError::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RspError::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RspError::RspError()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protocol_2eproto::scc_info_RspError.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:spaceless.protocol.RspError)
}
RspError::RspError(const RspError& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:spaceless.protocol.RspError)
}

void RspError::SharedCtor() {
  result_ = 0;
}

RspError::~RspError() {
  // @@protoc_insertion_point(destructor:spaceless.protocol.RspError)
  SharedDtor();
}

void RspError::SharedDtor() {
}

void RspError::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RspError::descriptor() {
  ::protobuf_protocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RspError& RspError::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protocol_2eproto::scc_info_RspError.base);
  return *internal_default_instance();
}


void RspError::Clear() {
// @@protoc_insertion_point(message_clear_start:spaceless.protocol.RspError)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = 0;
  _internal_metadata_.Clear();
}

bool RspError::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:spaceless.protocol.RspError)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:spaceless.protocol.RspError)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:spaceless.protocol.RspError)
  return false;
#undef DO_
}

void RspError::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:spaceless.protocol.RspError)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 result = 1;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:spaceless.protocol.RspError)
}

::google::protobuf::uint8* RspError::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:spaceless.protocol.RspError)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 result = 1;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:spaceless.protocol.RspError)
  return target;
}

size_t RspError::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:spaceless.protocol.RspError)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 result = 1;
  if (this->result() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RspError::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:spaceless.protocol.RspError)
  GOOGLE_DCHECK_NE(&from, this);
  const RspError* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RspError>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:spaceless.protocol.RspError)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:spaceless.protocol.RspError)
    MergeFrom(*source);
  }
}

void RspError::MergeFrom(const RspError& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:spaceless.protocol.RspError)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    set_result(from.result());
  }
}

void RspError::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:spaceless.protocol.RspError)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RspError::CopyFrom(const RspError& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:spaceless.protocol.RspError)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RspError::IsInitialized() const {
  return true;
}

void RspError::Swap(RspError* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RspError::InternalSwap(RspError* other) {
  using std::swap;
  swap(result_, other->result_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RspError::GetMetadata() const {
  protobuf_protocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void User::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int User::kUserIdFieldNumber;
const int User::kUserNameFieldNumber;
const int User::kGroupListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

User::User()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protocol_2eproto::scc_info_User.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:spaceless.protocol.User)
}
User::User(const User& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      group_list_(from.group_list_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  user_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.user_name().size() > 0) {
    user_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_name_);
  }
  user_id_ = from.user_id_;
  // @@protoc_insertion_point(copy_constructor:spaceless.protocol.User)
}

void User::SharedCtor() {
  user_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_id_ = 0;
}

User::~User() {
  // @@protoc_insertion_point(destructor:spaceless.protocol.User)
  SharedDtor();
}

void User::SharedDtor() {
  user_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void User::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* User::descriptor() {
  ::protobuf_protocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const User& User::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protocol_2eproto::scc_info_User.base);
  return *internal_default_instance();
}


void User::Clear() {
// @@protoc_insertion_point(message_clear_start:spaceless.protocol.User)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  group_list_.Clear();
  user_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_id_ = 0;
  _internal_metadata_.Clear();
}

bool User::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:spaceless.protocol.User)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 user_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &user_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string user_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->user_name().data(), static_cast<int>(this->user_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "spaceless.protocol.User.user_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 group_list = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_group_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 26u, input, this->mutable_group_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:spaceless.protocol.User)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:spaceless.protocol.User)
  return false;
#undef DO_
}

void User::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:spaceless.protocol.User)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 user_id = 1;
  if (this->user_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->user_id(), output);
  }

  // string user_name = 2;
  if (this->user_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_name().data(), static_cast<int>(this->user_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "spaceless.protocol.User.user_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->user_name(), output);
  }

  // repeated int32 group_list = 3;
  if (this->group_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(3, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _group_list_cached_byte_size_));
  }
  for (int i = 0, n = this->group_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->group_list(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:spaceless.protocol.User)
}

::google::protobuf::uint8* User::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:spaceless.protocol.User)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 user_id = 1;
  if (this->user_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->user_id(), target);
  }

  // string user_name = 2;
  if (this->user_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_name().data(), static_cast<int>(this->user_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "spaceless.protocol.User.user_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->user_name(), target);
  }

  // repeated int32 group_list = 3;
  if (this->group_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      3,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _group_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->group_list_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:spaceless.protocol.User)
  return target;
}

size_t User::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:spaceless.protocol.User)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int32 group_list = 3;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->group_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _group_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // string user_name = 2;
  if (this->user_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user_name());
  }

  // int32 user_id = 1;
  if (this->user_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->user_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void User::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:spaceless.protocol.User)
  GOOGLE_DCHECK_NE(&from, this);
  const User* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const User>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:spaceless.protocol.User)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:spaceless.protocol.User)
    MergeFrom(*source);
  }
}

void User::MergeFrom(const User& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:spaceless.protocol.User)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  group_list_.MergeFrom(from.group_list_);
  if (from.user_name().size() > 0) {

    user_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_name_);
  }
  if (from.user_id() != 0) {
    set_user_id(from.user_id());
  }
}

void User::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:spaceless.protocol.User)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void User::CopyFrom(const User& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:spaceless.protocol.User)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool User::IsInitialized() const {
  return true;
}

void User::Swap(User* other) {
  if (other == this) return;
  InternalSwap(other);
}
void User::InternalSwap(User* other) {
  using std::swap;
  group_list_.InternalSwap(&other->group_list_);
  user_name_.Swap(&other->user_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(user_id_, other->user_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata User::GetMetadata() const {
  protobuf_protocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ReqRegisterUser::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReqRegisterUser::kUsernameFieldNumber;
const int ReqRegisterUser::kPasswordFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReqRegisterUser::ReqRegisterUser()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protocol_2eproto::scc_info_ReqRegisterUser.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:spaceless.protocol.ReqRegisterUser)
}
ReqRegisterUser::ReqRegisterUser(const ReqRegisterUser& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.username().size() > 0) {
    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.password().size() > 0) {
    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  // @@protoc_insertion_point(copy_constructor:spaceless.protocol.ReqRegisterUser)
}

void ReqRegisterUser::SharedCtor() {
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ReqRegisterUser::~ReqRegisterUser() {
  // @@protoc_insertion_point(destructor:spaceless.protocol.ReqRegisterUser)
  SharedDtor();
}

void ReqRegisterUser::SharedDtor() {
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ReqRegisterUser::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ReqRegisterUser::descriptor() {
  ::protobuf_protocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ReqRegisterUser& ReqRegisterUser::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protocol_2eproto::scc_info_ReqRegisterUser.base);
  return *internal_default_instance();
}


void ReqRegisterUser::Clear() {
// @@protoc_insertion_point(message_clear_start:spaceless.protocol.ReqRegisterUser)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool ReqRegisterUser::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:spaceless.protocol.ReqRegisterUser)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string username = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->username().data(), static_cast<int>(this->username().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "spaceless.protocol.ReqRegisterUser.username"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string password = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->password().data(), static_cast<int>(this->password().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "spaceless.protocol.ReqRegisterUser.password"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:spaceless.protocol.ReqRegisterUser)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:spaceless.protocol.ReqRegisterUser)
  return false;
#undef DO_
}

void ReqRegisterUser::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:spaceless.protocol.ReqRegisterUser)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string username = 1;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "spaceless.protocol.ReqRegisterUser.username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->username(), output);
  }

  // string password = 2;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), static_cast<int>(this->password().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "spaceless.protocol.ReqRegisterUser.password");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->password(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:spaceless.protocol.ReqRegisterUser)
}

::google::protobuf::uint8* ReqRegisterUser::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:spaceless.protocol.ReqRegisterUser)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string username = 1;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "spaceless.protocol.ReqRegisterUser.username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->username(), target);
  }

  // string password = 2;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), static_cast<int>(this->password().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "spaceless.protocol.ReqRegisterUser.password");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->password(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:spaceless.protocol.ReqRegisterUser)
  return target;
}

size_t ReqRegisterUser::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:spaceless.protocol.ReqRegisterUser)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string username = 1;
  if (this->username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->username());
  }

  // string password = 2;
  if (this->password().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->password());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReqRegisterUser::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:spaceless.protocol.ReqRegisterUser)
  GOOGLE_DCHECK_NE(&from, this);
  const ReqRegisterUser* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReqRegisterUser>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:spaceless.protocol.ReqRegisterUser)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:spaceless.protocol.ReqRegisterUser)
    MergeFrom(*source);
  }
}

void ReqRegisterUser::MergeFrom(const ReqRegisterUser& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:spaceless.protocol.ReqRegisterUser)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.username().size() > 0) {

    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  if (from.password().size() > 0) {

    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
}

void ReqRegisterUser::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:spaceless.protocol.ReqRegisterUser)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReqRegisterUser::CopyFrom(const ReqRegisterUser& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:spaceless.protocol.ReqRegisterUser)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReqRegisterUser::IsInitialized() const {
  return true;
}

void ReqRegisterUser::Swap(ReqRegisterUser* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReqRegisterUser::InternalSwap(ReqRegisterUser* other) {
  using std::swap;
  username_.Swap(&other->username_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  password_.Swap(&other->password_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ReqRegisterUser::GetMetadata() const {
  protobuf_protocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RspRegisterUser::InitAsDefaultInstance() {
  ::spaceless::protocol::_RspRegisterUser_default_instance_._instance.get_mutable()->user_ = const_cast< ::spaceless::protocol::User*>(
      ::spaceless::protocol::User::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RspRegisterUser::kResultFieldNumber;
const int RspRegisterUser::kUserFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RspRegisterUser::RspRegisterUser()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protocol_2eproto::scc_info_RspRegisterUser.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:spaceless.protocol.RspRegisterUser)
}
RspRegisterUser::RspRegisterUser(const RspRegisterUser& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_user()) {
    user_ = new ::spaceless::protocol::User(*from.user_);
  } else {
    user_ = NULL;
  }
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:spaceless.protocol.RspRegisterUser)
}

void RspRegisterUser::SharedCtor() {
  ::memset(&user_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&result_) -
      reinterpret_cast<char*>(&user_)) + sizeof(result_));
}

RspRegisterUser::~RspRegisterUser() {
  // @@protoc_insertion_point(destructor:spaceless.protocol.RspRegisterUser)
  SharedDtor();
}

void RspRegisterUser::SharedDtor() {
  if (this != internal_default_instance()) delete user_;
}

void RspRegisterUser::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RspRegisterUser::descriptor() {
  ::protobuf_protocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RspRegisterUser& RspRegisterUser::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protocol_2eproto::scc_info_RspRegisterUser.base);
  return *internal_default_instance();
}


void RspRegisterUser::Clear() {
// @@protoc_insertion_point(message_clear_start:spaceless.protocol.RspRegisterUser)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && user_ != NULL) {
    delete user_;
  }
  user_ = NULL;
  result_ = 0;
  _internal_metadata_.Clear();
}

bool RspRegisterUser::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:spaceless.protocol.RspRegisterUser)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .spaceless.protocol.User user = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_user()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:spaceless.protocol.RspRegisterUser)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:spaceless.protocol.RspRegisterUser)
  return false;
#undef DO_
}

void RspRegisterUser::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:spaceless.protocol.RspRegisterUser)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 result = 1;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // .spaceless.protocol.User user = 2;
  if (this->has_user()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_user(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:spaceless.protocol.RspRegisterUser)
}

::google::protobuf::uint8* RspRegisterUser::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:spaceless.protocol.RspRegisterUser)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 result = 1;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // .spaceless.protocol.User user = 2;
  if (this->has_user()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_user(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:spaceless.protocol.RspRegisterUser)
  return target;
}

size_t RspRegisterUser::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:spaceless.protocol.RspRegisterUser)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .spaceless.protocol.User user = 2;
  if (this->has_user()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *user_);
  }

  // int32 result = 1;
  if (this->result() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RspRegisterUser::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:spaceless.protocol.RspRegisterUser)
  GOOGLE_DCHECK_NE(&from, this);
  const RspRegisterUser* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RspRegisterUser>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:spaceless.protocol.RspRegisterUser)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:spaceless.protocol.RspRegisterUser)
    MergeFrom(*source);
  }
}

void RspRegisterUser::MergeFrom(const RspRegisterUser& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:spaceless.protocol.RspRegisterUser)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_user()) {
    mutable_user()->::spaceless::protocol::User::MergeFrom(from.user());
  }
  if (from.result() != 0) {
    set_result(from.result());
  }
}

void RspRegisterUser::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:spaceless.protocol.RspRegisterUser)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RspRegisterUser::CopyFrom(const RspRegisterUser& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:spaceless.protocol.RspRegisterUser)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RspRegisterUser::IsInitialized() const {
  return true;
}

void RspRegisterUser::Swap(RspRegisterUser* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RspRegisterUser::InternalSwap(RspRegisterUser* other) {
  using std::swap;
  swap(user_, other->user_);
  swap(result_, other->result_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RspRegisterUser::GetMetadata() const {
  protobuf_protocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ReqLoginUser::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReqLoginUser::kUserIdFieldNumber;
const int ReqLoginUser::kPasswordFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReqLoginUser::ReqLoginUser()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protocol_2eproto::scc_info_ReqLoginUser.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:spaceless.protocol.ReqLoginUser)
}
ReqLoginUser::ReqLoginUser(const ReqLoginUser& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.password().size() > 0) {
    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  user_id_ = from.user_id_;
  // @@protoc_insertion_point(copy_constructor:spaceless.protocol.ReqLoginUser)
}

void ReqLoginUser::SharedCtor() {
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_id_ = 0;
}

ReqLoginUser::~ReqLoginUser() {
  // @@protoc_insertion_point(destructor:spaceless.protocol.ReqLoginUser)
  SharedDtor();
}

void ReqLoginUser::SharedDtor() {
  password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ReqLoginUser::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ReqLoginUser::descriptor() {
  ::protobuf_protocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ReqLoginUser& ReqLoginUser::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protocol_2eproto::scc_info_ReqLoginUser.base);
  return *internal_default_instance();
}


void ReqLoginUser::Clear() {
// @@protoc_insertion_point(message_clear_start:spaceless.protocol.ReqLoginUser)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_id_ = 0;
  _internal_metadata_.Clear();
}

bool ReqLoginUser::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:spaceless.protocol.ReqLoginUser)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 user_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &user_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string password = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->password().data(), static_cast<int>(this->password().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "spaceless.protocol.ReqLoginUser.password"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:spaceless.protocol.ReqLoginUser)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:spaceless.protocol.ReqLoginUser)
  return false;
#undef DO_
}

void ReqLoginUser::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:spaceless.protocol.ReqLoginUser)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 user_id = 1;
  if (this->user_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->user_id(), output);
  }

  // string password = 2;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), static_cast<int>(this->password().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "spaceless.protocol.ReqLoginUser.password");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->password(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:spaceless.protocol.ReqLoginUser)
}

::google::protobuf::uint8* ReqLoginUser::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:spaceless.protocol.ReqLoginUser)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 user_id = 1;
  if (this->user_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->user_id(), target);
  }

  // string password = 2;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), static_cast<int>(this->password().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "spaceless.protocol.ReqLoginUser.password");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->password(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:spaceless.protocol.ReqLoginUser)
  return target;
}

size_t ReqLoginUser::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:spaceless.protocol.ReqLoginUser)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string password = 2;
  if (this->password().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->password());
  }

  // int32 user_id = 1;
  if (this->user_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->user_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReqLoginUser::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:spaceless.protocol.ReqLoginUser)
  GOOGLE_DCHECK_NE(&from, this);
  const ReqLoginUser* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReqLoginUser>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:spaceless.protocol.ReqLoginUser)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:spaceless.protocol.ReqLoginUser)
    MergeFrom(*source);
  }
}

void ReqLoginUser::MergeFrom(const ReqLoginUser& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:spaceless.protocol.ReqLoginUser)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.password().size() > 0) {

    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  if (from.user_id() != 0) {
    set_user_id(from.user_id());
  }
}

void ReqLoginUser::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:spaceless.protocol.ReqLoginUser)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReqLoginUser::CopyFrom(const ReqLoginUser& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:spaceless.protocol.ReqLoginUser)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReqLoginUser::IsInitialized() const {
  return true;
}

void ReqLoginUser::Swap(ReqLoginUser* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReqLoginUser::InternalSwap(ReqLoginUser* other) {
  using std::swap;
  password_.Swap(&other->password_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(user_id_, other->user_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ReqLoginUser::GetMetadata() const {
  protobuf_protocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RspLoginUser::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RspLoginUser::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RspLoginUser::RspLoginUser()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protocol_2eproto::scc_info_RspLoginUser.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:spaceless.protocol.RspLoginUser)
}
RspLoginUser::RspLoginUser(const RspLoginUser& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:spaceless.protocol.RspLoginUser)
}

void RspLoginUser::SharedCtor() {
  result_ = 0;
}

RspLoginUser::~RspLoginUser() {
  // @@protoc_insertion_point(destructor:spaceless.protocol.RspLoginUser)
  SharedDtor();
}

void RspLoginUser::SharedDtor() {
}

void RspLoginUser::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RspLoginUser::descriptor() {
  ::protobuf_protocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RspLoginUser& RspLoginUser::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protocol_2eproto::scc_info_RspLoginUser.base);
  return *internal_default_instance();
}


void RspLoginUser::Clear() {
// @@protoc_insertion_point(message_clear_start:spaceless.protocol.RspLoginUser)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = 0;
  _internal_metadata_.Clear();
}

bool RspLoginUser::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:spaceless.protocol.RspLoginUser)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:spaceless.protocol.RspLoginUser)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:spaceless.protocol.RspLoginUser)
  return false;
#undef DO_
}

void RspLoginUser::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:spaceless.protocol.RspLoginUser)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 result = 1;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:spaceless.protocol.RspLoginUser)
}

::google::protobuf::uint8* RspLoginUser::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:spaceless.protocol.RspLoginUser)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 result = 1;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:spaceless.protocol.RspLoginUser)
  return target;
}

size_t RspLoginUser::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:spaceless.protocol.RspLoginUser)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 result = 1;
  if (this->result() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RspLoginUser::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:spaceless.protocol.RspLoginUser)
  GOOGLE_DCHECK_NE(&from, this);
  const RspLoginUser* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RspLoginUser>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:spaceless.protocol.RspLoginUser)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:spaceless.protocol.RspLoginUser)
    MergeFrom(*source);
  }
}

void RspLoginUser::MergeFrom(const RspLoginUser& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:spaceless.protocol.RspLoginUser)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    set_result(from.result());
  }
}

void RspLoginUser::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:spaceless.protocol.RspLoginUser)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RspLoginUser::CopyFrom(const RspLoginUser& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:spaceless.protocol.RspLoginUser)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RspLoginUser::IsInitialized() const {
  return true;
}

void RspLoginUser::Swap(RspLoginUser* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RspLoginUser::InternalSwap(RspLoginUser* other) {
  using std::swap;
  swap(result_, other->result_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RspLoginUser::GetMetadata() const {
  protobuf_protocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ReqRemoveUser::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReqRemoveUser::kUserIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReqRemoveUser::ReqRemoveUser()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protocol_2eproto::scc_info_ReqRemoveUser.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:spaceless.protocol.ReqRemoveUser)
}
ReqRemoveUser::ReqRemoveUser(const ReqRemoveUser& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  user_id_ = from.user_id_;
  // @@protoc_insertion_point(copy_constructor:spaceless.protocol.ReqRemoveUser)
}

void ReqRemoveUser::SharedCtor() {
  user_id_ = 0;
}

ReqRemoveUser::~ReqRemoveUser() {
  // @@protoc_insertion_point(destructor:spaceless.protocol.ReqRemoveUser)
  SharedDtor();
}

void ReqRemoveUser::SharedDtor() {
}

void ReqRemoveUser::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ReqRemoveUser::descriptor() {
  ::protobuf_protocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ReqRemoveUser& ReqRemoveUser::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protocol_2eproto::scc_info_ReqRemoveUser.base);
  return *internal_default_instance();
}


void ReqRemoveUser::Clear() {
// @@protoc_insertion_point(message_clear_start:spaceless.protocol.ReqRemoveUser)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  user_id_ = 0;
  _internal_metadata_.Clear();
}

bool ReqRemoveUser::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:spaceless.protocol.ReqRemoveUser)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 user_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &user_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:spaceless.protocol.ReqRemoveUser)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:spaceless.protocol.ReqRemoveUser)
  return false;
#undef DO_
}

void ReqRemoveUser::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:spaceless.protocol.ReqRemoveUser)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 user_id = 1;
  if (this->user_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->user_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:spaceless.protocol.ReqRemoveUser)
}

::google::protobuf::uint8* ReqRemoveUser::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:spaceless.protocol.ReqRemoveUser)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 user_id = 1;
  if (this->user_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->user_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:spaceless.protocol.ReqRemoveUser)
  return target;
}

size_t ReqRemoveUser::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:spaceless.protocol.ReqRemoveUser)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 user_id = 1;
  if (this->user_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->user_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReqRemoveUser::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:spaceless.protocol.ReqRemoveUser)
  GOOGLE_DCHECK_NE(&from, this);
  const ReqRemoveUser* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReqRemoveUser>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:spaceless.protocol.ReqRemoveUser)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:spaceless.protocol.ReqRemoveUser)
    MergeFrom(*source);
  }
}

void ReqRemoveUser::MergeFrom(const ReqRemoveUser& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:spaceless.protocol.ReqRemoveUser)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.user_id() != 0) {
    set_user_id(from.user_id());
  }
}

void ReqRemoveUser::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:spaceless.protocol.ReqRemoveUser)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReqRemoveUser::CopyFrom(const ReqRemoveUser& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:spaceless.protocol.ReqRemoveUser)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReqRemoveUser::IsInitialized() const {
  return true;
}

void ReqRemoveUser::Swap(ReqRemoveUser* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReqRemoveUser::InternalSwap(ReqRemoveUser* other) {
  using std::swap;
  swap(user_id_, other->user_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ReqRemoveUser::GetMetadata() const {
  protobuf_protocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RspRemoveUser::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RspRemoveUser::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RspRemoveUser::RspRemoveUser()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protocol_2eproto::scc_info_RspRemoveUser.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:spaceless.protocol.RspRemoveUser)
}
RspRemoveUser::RspRemoveUser(const RspRemoveUser& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:spaceless.protocol.RspRemoveUser)
}

void RspRemoveUser::SharedCtor() {
  result_ = 0;
}

RspRemoveUser::~RspRemoveUser() {
  // @@protoc_insertion_point(destructor:spaceless.protocol.RspRemoveUser)
  SharedDtor();
}

void RspRemoveUser::SharedDtor() {
}

void RspRemoveUser::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RspRemoveUser::descriptor() {
  ::protobuf_protocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RspRemoveUser& RspRemoveUser::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protocol_2eproto::scc_info_RspRemoveUser.base);
  return *internal_default_instance();
}


void RspRemoveUser::Clear() {
// @@protoc_insertion_point(message_clear_start:spaceless.protocol.RspRemoveUser)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = 0;
  _internal_metadata_.Clear();
}

bool RspRemoveUser::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:spaceless.protocol.RspRemoveUser)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:spaceless.protocol.RspRemoveUser)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:spaceless.protocol.RspRemoveUser)
  return false;
#undef DO_
}

void RspRemoveUser::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:spaceless.protocol.RspRemoveUser)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 result = 1;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:spaceless.protocol.RspRemoveUser)
}

::google::protobuf::uint8* RspRemoveUser::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:spaceless.protocol.RspRemoveUser)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 result = 1;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:spaceless.protocol.RspRemoveUser)
  return target;
}

size_t RspRemoveUser::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:spaceless.protocol.RspRemoveUser)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 result = 1;
  if (this->result() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RspRemoveUser::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:spaceless.protocol.RspRemoveUser)
  GOOGLE_DCHECK_NE(&from, this);
  const RspRemoveUser* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RspRemoveUser>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:spaceless.protocol.RspRemoveUser)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:spaceless.protocol.RspRemoveUser)
    MergeFrom(*source);
  }
}

void RspRemoveUser::MergeFrom(const RspRemoveUser& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:spaceless.protocol.RspRemoveUser)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    set_result(from.result());
  }
}

void RspRemoveUser::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:spaceless.protocol.RspRemoveUser)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RspRemoveUser::CopyFrom(const RspRemoveUser& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:spaceless.protocol.RspRemoveUser)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RspRemoveUser::IsInitialized() const {
  return true;
}

void RspRemoveUser::Swap(RspRemoveUser* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RspRemoveUser::InternalSwap(RspRemoveUser* other) {
  using std::swap;
  swap(result_, other->result_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RspRemoveUser::GetMetadata() const {
  protobuf_protocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ReqFindUser::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReqFindUser::kUserIdFieldNumber;
const int ReqFindUser::kUsernameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReqFindUser::ReqFindUser()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protocol_2eproto::scc_info_ReqFindUser.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:spaceless.protocol.ReqFindUser)
}
ReqFindUser::ReqFindUser(const ReqFindUser& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.username().size() > 0) {
    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  user_id_ = from.user_id_;
  // @@protoc_insertion_point(copy_constructor:spaceless.protocol.ReqFindUser)
}

void ReqFindUser::SharedCtor() {
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_id_ = 0;
}

ReqFindUser::~ReqFindUser() {
  // @@protoc_insertion_point(destructor:spaceless.protocol.ReqFindUser)
  SharedDtor();
}

void ReqFindUser::SharedDtor() {
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ReqFindUser::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ReqFindUser::descriptor() {
  ::protobuf_protocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ReqFindUser& ReqFindUser::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protocol_2eproto::scc_info_ReqFindUser.base);
  return *internal_default_instance();
}


void ReqFindUser::Clear() {
// @@protoc_insertion_point(message_clear_start:spaceless.protocol.ReqFindUser)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_id_ = 0;
  _internal_metadata_.Clear();
}

bool ReqFindUser::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:spaceless.protocol.ReqFindUser)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 user_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &user_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string username = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->username().data(), static_cast<int>(this->username().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "spaceless.protocol.ReqFindUser.username"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:spaceless.protocol.ReqFindUser)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:spaceless.protocol.ReqFindUser)
  return false;
#undef DO_
}

void ReqFindUser::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:spaceless.protocol.ReqFindUser)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 user_id = 1;
  if (this->user_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->user_id(), output);
  }

  // string username = 2;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "spaceless.protocol.ReqFindUser.username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->username(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:spaceless.protocol.ReqFindUser)
}

::google::protobuf::uint8* ReqFindUser::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:spaceless.protocol.ReqFindUser)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 user_id = 1;
  if (this->user_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->user_id(), target);
  }

  // string username = 2;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "spaceless.protocol.ReqFindUser.username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->username(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:spaceless.protocol.ReqFindUser)
  return target;
}

size_t ReqFindUser::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:spaceless.protocol.ReqFindUser)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string username = 2;
  if (this->username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->username());
  }

  // int32 user_id = 1;
  if (this->user_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->user_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReqFindUser::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:spaceless.protocol.ReqFindUser)
  GOOGLE_DCHECK_NE(&from, this);
  const ReqFindUser* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReqFindUser>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:spaceless.protocol.ReqFindUser)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:spaceless.protocol.ReqFindUser)
    MergeFrom(*source);
  }
}

void ReqFindUser::MergeFrom(const ReqFindUser& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:spaceless.protocol.ReqFindUser)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.username().size() > 0) {

    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  if (from.user_id() != 0) {
    set_user_id(from.user_id());
  }
}

void ReqFindUser::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:spaceless.protocol.ReqFindUser)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReqFindUser::CopyFrom(const ReqFindUser& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:spaceless.protocol.ReqFindUser)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReqFindUser::IsInitialized() const {
  return true;
}

void ReqFindUser::Swap(ReqFindUser* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReqFindUser::InternalSwap(ReqFindUser* other) {
  using std::swap;
  username_.Swap(&other->username_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(user_id_, other->user_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ReqFindUser::GetMetadata() const {
  protobuf_protocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RspFindUser::InitAsDefaultInstance() {
  ::spaceless::protocol::_RspFindUser_default_instance_._instance.get_mutable()->user_ = const_cast< ::spaceless::protocol::User*>(
      ::spaceless::protocol::User::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RspFindUser::kResultFieldNumber;
const int RspFindUser::kUserFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RspFindUser::RspFindUser()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protocol_2eproto::scc_info_RspFindUser.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:spaceless.protocol.RspFindUser)
}
RspFindUser::RspFindUser(const RspFindUser& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_user()) {
    user_ = new ::spaceless::protocol::User(*from.user_);
  } else {
    user_ = NULL;
  }
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:spaceless.protocol.RspFindUser)
}

void RspFindUser::SharedCtor() {
  ::memset(&user_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&result_) -
      reinterpret_cast<char*>(&user_)) + sizeof(result_));
}

RspFindUser::~RspFindUser() {
  // @@protoc_insertion_point(destructor:spaceless.protocol.RspFindUser)
  SharedDtor();
}

void RspFindUser::SharedDtor() {
  if (this != internal_default_instance()) delete user_;
}

void RspFindUser::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RspFindUser::descriptor() {
  ::protobuf_protocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RspFindUser& RspFindUser::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protocol_2eproto::scc_info_RspFindUser.base);
  return *internal_default_instance();
}


void RspFindUser::Clear() {
// @@protoc_insertion_point(message_clear_start:spaceless.protocol.RspFindUser)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && user_ != NULL) {
    delete user_;
  }
  user_ = NULL;
  result_ = 0;
  _internal_metadata_.Clear();
}

bool RspFindUser::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:spaceless.protocol.RspFindUser)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .spaceless.protocol.User user = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_user()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:spaceless.protocol.RspFindUser)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:spaceless.protocol.RspFindUser)
  return false;
#undef DO_
}

void RspFindUser::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:spaceless.protocol.RspFindUser)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 result = 1;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // .spaceless.protocol.User user = 2;
  if (this->has_user()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_user(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:spaceless.protocol.RspFindUser)
}

::google::protobuf::uint8* RspFindUser::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:spaceless.protocol.RspFindUser)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 result = 1;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // .spaceless.protocol.User user = 2;
  if (this->has_user()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_user(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:spaceless.protocol.RspFindUser)
  return target;
}

size_t RspFindUser::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:spaceless.protocol.RspFindUser)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .spaceless.protocol.User user = 2;
  if (this->has_user()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *user_);
  }

  // int32 result = 1;
  if (this->result() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RspFindUser::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:spaceless.protocol.RspFindUser)
  GOOGLE_DCHECK_NE(&from, this);
  const RspFindUser* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RspFindUser>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:spaceless.protocol.RspFindUser)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:spaceless.protocol.RspFindUser)
    MergeFrom(*source);
  }
}

void RspFindUser::MergeFrom(const RspFindUser& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:spaceless.protocol.RspFindUser)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_user()) {
    mutable_user()->::spaceless::protocol::User::MergeFrom(from.user());
  }
  if (from.result() != 0) {
    set_result(from.result());
  }
}

void RspFindUser::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:spaceless.protocol.RspFindUser)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RspFindUser::CopyFrom(const RspFindUser& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:spaceless.protocol.RspFindUser)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RspFindUser::IsInitialized() const {
  return true;
}

void RspFindUser::Swap(RspFindUser* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RspFindUser::InternalSwap(RspFindUser* other) {
  using std::swap;
  swap(user_, other->user_);
  swap(result_, other->result_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RspFindUser::GetMetadata() const {
  protobuf_protocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SharingGroup::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SharingGroup::kGroupIdFieldNumber;
const int SharingGroup::kGroupNameFieldNumber;
const int SharingGroup::kOwnerIdFieldNumber;
const int SharingGroup::kRootDirIdFieldNumber;
const int SharingGroup::kManagerListFieldNumber;
const int SharingGroup::kMemberListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SharingGroup::SharingGroup()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protocol_2eproto::scc_info_SharingGroup.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:spaceless.protocol.SharingGroup)
}
SharingGroup::SharingGroup(const SharingGroup& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      manager_list_(from.manager_list_),
      member_list_(from.member_list_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  group_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.group_name().size() > 0) {
    group_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.group_name_);
  }
  ::memcpy(&group_id_, &from.group_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&root_dir_id_) -
    reinterpret_cast<char*>(&group_id_)) + sizeof(root_dir_id_));
  // @@protoc_insertion_point(copy_constructor:spaceless.protocol.SharingGroup)
}

void SharingGroup::SharedCtor() {
  group_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&group_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&root_dir_id_) -
      reinterpret_cast<char*>(&group_id_)) + sizeof(root_dir_id_));
}

SharingGroup::~SharingGroup() {
  // @@protoc_insertion_point(destructor:spaceless.protocol.SharingGroup)
  SharedDtor();
}

void SharingGroup::SharedDtor() {
  group_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SharingGroup::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SharingGroup::descriptor() {
  ::protobuf_protocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SharingGroup& SharingGroup::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protocol_2eproto::scc_info_SharingGroup.base);
  return *internal_default_instance();
}


void SharingGroup::Clear() {
// @@protoc_insertion_point(message_clear_start:spaceless.protocol.SharingGroup)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  manager_list_.Clear();
  member_list_.Clear();
  group_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&group_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&root_dir_id_) -
      reinterpret_cast<char*>(&group_id_)) + sizeof(root_dir_id_));
  _internal_metadata_.Clear();
}

bool SharingGroup::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:spaceless.protocol.SharingGroup)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 group_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &group_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string group_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_group_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->group_name().data(), static_cast<int>(this->group_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "spaceless.protocol.SharingGroup.group_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 owner_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &owner_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 root_dir_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &root_dir_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 manager_list = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_manager_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 42u, input, this->mutable_manager_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 member_list = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_member_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 50u, input, this->mutable_member_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:spaceless.protocol.SharingGroup)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:spaceless.protocol.SharingGroup)
  return false;
#undef DO_
}

void SharingGroup::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:spaceless.protocol.SharingGroup)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 group_id = 1;
  if (this->group_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->group_id(), output);
  }

  // string group_name = 2;
  if (this->group_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->group_name().data(), static_cast<int>(this->group_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "spaceless.protocol.SharingGroup.group_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->group_name(), output);
  }

  // int32 owner_id = 3;
  if (this->owner_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->owner_id(), output);
  }

  // int32 root_dir_id = 4;
  if (this->root_dir_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->root_dir_id(), output);
  }

  // repeated int32 manager_list = 5;
  if (this->manager_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(5, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _manager_list_cached_byte_size_));
  }
  for (int i = 0, n = this->manager_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->manager_list(i), output);
  }

  // repeated int32 member_list = 6;
  if (this->member_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(6, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _member_list_cached_byte_size_));
  }
  for (int i = 0, n = this->member_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->member_list(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:spaceless.protocol.SharingGroup)
}

::google::protobuf::uint8* SharingGroup::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:spaceless.protocol.SharingGroup)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 group_id = 1;
  if (this->group_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->group_id(), target);
  }

  // string group_name = 2;
  if (this->group_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->group_name().data(), static_cast<int>(this->group_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "spaceless.protocol.SharingGroup.group_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->group_name(), target);
  }

  // int32 owner_id = 3;
  if (this->owner_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->owner_id(), target);
  }

  // int32 root_dir_id = 4;
  if (this->root_dir_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->root_dir_id(), target);
  }

  // repeated int32 manager_list = 5;
  if (this->manager_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      5,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _manager_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->manager_list_, target);
  }

  // repeated int32 member_list = 6;
  if (this->member_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      6,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _member_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->member_list_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:spaceless.protocol.SharingGroup)
  return target;
}

size_t SharingGroup::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:spaceless.protocol.SharingGroup)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int32 manager_list = 5;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->manager_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _manager_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 member_list = 6;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->member_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _member_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // string group_name = 2;
  if (this->group_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->group_name());
  }

  // int32 group_id = 1;
  if (this->group_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->group_id());
  }

  // int32 owner_id = 3;
  if (this->owner_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->owner_id());
  }

  // int32 root_dir_id = 4;
  if (this->root_dir_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->root_dir_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SharingGroup::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:spaceless.protocol.SharingGroup)
  GOOGLE_DCHECK_NE(&from, this);
  const SharingGroup* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SharingGroup>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:spaceless.protocol.SharingGroup)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:spaceless.protocol.SharingGroup)
    MergeFrom(*source);
  }
}

void SharingGroup::MergeFrom(const SharingGroup& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:spaceless.protocol.SharingGroup)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  manager_list_.MergeFrom(from.manager_list_);
  member_list_.MergeFrom(from.member_list_);
  if (from.group_name().size() > 0) {

    group_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.group_name_);
  }
  if (from.group_id() != 0) {
    set_group_id(from.group_id());
  }
  if (from.owner_id() != 0) {
    set_owner_id(from.owner_id());
  }
  if (from.root_dir_id() != 0) {
    set_root_dir_id(from.root_dir_id());
  }
}

void SharingGroup::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:spaceless.protocol.SharingGroup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SharingGroup::CopyFrom(const SharingGroup& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:spaceless.protocol.SharingGroup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SharingGroup::IsInitialized() const {
  return true;
}

void SharingGroup::Swap(SharingGroup* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SharingGroup::InternalSwap(SharingGroup* other) {
  using std::swap;
  manager_list_.InternalSwap(&other->manager_list_);
  member_list_.InternalSwap(&other->member_list_);
  group_name_.Swap(&other->group_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(group_id_, other->group_id_);
  swap(owner_id_, other->owner_id_);
  swap(root_dir_id_, other->root_dir_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SharingGroup::GetMetadata() const {
  protobuf_protocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ReqRegisterGroup::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReqRegisterGroup::kGroupNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReqRegisterGroup::ReqRegisterGroup()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protocol_2eproto::scc_info_ReqRegisterGroup.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:spaceless.protocol.ReqRegisterGroup)
}
ReqRegisterGroup::ReqRegisterGroup(const ReqRegisterGroup& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  group_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.group_name().size() > 0) {
    group_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.group_name_);
  }
  // @@protoc_insertion_point(copy_constructor:spaceless.protocol.ReqRegisterGroup)
}

void ReqRegisterGroup::SharedCtor() {
  group_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ReqRegisterGroup::~ReqRegisterGroup() {
  // @@protoc_insertion_point(destructor:spaceless.protocol.ReqRegisterGroup)
  SharedDtor();
}

void ReqRegisterGroup::SharedDtor() {
  group_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ReqRegisterGroup::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ReqRegisterGroup::descriptor() {
  ::protobuf_protocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ReqRegisterGroup& ReqRegisterGroup::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protocol_2eproto::scc_info_ReqRegisterGroup.base);
  return *internal_default_instance();
}


void ReqRegisterGroup::Clear() {
// @@protoc_insertion_point(message_clear_start:spaceless.protocol.ReqRegisterGroup)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  group_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool ReqRegisterGroup::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:spaceless.protocol.ReqRegisterGroup)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string group_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_group_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->group_name().data(), static_cast<int>(this->group_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "spaceless.protocol.ReqRegisterGroup.group_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:spaceless.protocol.ReqRegisterGroup)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:spaceless.protocol.ReqRegisterGroup)
  return false;
#undef DO_
}

void ReqRegisterGroup::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:spaceless.protocol.ReqRegisterGroup)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string group_name = 1;
  if (this->group_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->group_name().data(), static_cast<int>(this->group_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "spaceless.protocol.ReqRegisterGroup.group_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->group_name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:spaceless.protocol.ReqRegisterGroup)
}

::google::protobuf::uint8* ReqRegisterGroup::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:spaceless.protocol.ReqRegisterGroup)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string group_name = 1;
  if (this->group_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->group_name().data(), static_cast<int>(this->group_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "spaceless.protocol.ReqRegisterGroup.group_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->group_name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:spaceless.protocol.ReqRegisterGroup)
  return target;
}

size_t ReqRegisterGroup::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:spaceless.protocol.ReqRegisterGroup)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string group_name = 1;
  if (this->group_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->group_name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReqRegisterGroup::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:spaceless.protocol.ReqRegisterGroup)
  GOOGLE_DCHECK_NE(&from, this);
  const ReqRegisterGroup* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReqRegisterGroup>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:spaceless.protocol.ReqRegisterGroup)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:spaceless.protocol.ReqRegisterGroup)
    MergeFrom(*source);
  }
}

void ReqRegisterGroup::MergeFrom(const ReqRegisterGroup& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:spaceless.protocol.ReqRegisterGroup)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.group_name().size() > 0) {

    group_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.group_name_);
  }
}

void ReqRegisterGroup::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:spaceless.protocol.ReqRegisterGroup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReqRegisterGroup::CopyFrom(const ReqRegisterGroup& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:spaceless.protocol.ReqRegisterGroup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReqRegisterGroup::IsInitialized() const {
  return true;
}

void ReqRegisterGroup::Swap(ReqRegisterGroup* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReqRegisterGroup::InternalSwap(ReqRegisterGroup* other) {
  using std::swap;
  group_name_.Swap(&other->group_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ReqRegisterGroup::GetMetadata() const {
  protobuf_protocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RspRegisterGroup::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RspRegisterGroup::kResultFieldNumber;
const int RspRegisterGroup::kGroupIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RspRegisterGroup::RspRegisterGroup()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protocol_2eproto::scc_info_RspRegisterGroup.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:spaceless.protocol.RspRegisterGroup)
}
RspRegisterGroup::RspRegisterGroup(const RspRegisterGroup& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&result_, &from.result_,
    static_cast<size_t>(reinterpret_cast<char*>(&group_id_) -
    reinterpret_cast<char*>(&result_)) + sizeof(group_id_));
  // @@protoc_insertion_point(copy_constructor:spaceless.protocol.RspRegisterGroup)
}

void RspRegisterGroup::SharedCtor() {
  ::memset(&result_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&group_id_) -
      reinterpret_cast<char*>(&result_)) + sizeof(group_id_));
}

RspRegisterGroup::~RspRegisterGroup() {
  // @@protoc_insertion_point(destructor:spaceless.protocol.RspRegisterGroup)
  SharedDtor();
}

void RspRegisterGroup::SharedDtor() {
}

void RspRegisterGroup::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RspRegisterGroup::descriptor() {
  ::protobuf_protocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RspRegisterGroup& RspRegisterGroup::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protocol_2eproto::scc_info_RspRegisterGroup.base);
  return *internal_default_instance();
}


void RspRegisterGroup::Clear() {
// @@protoc_insertion_point(message_clear_start:spaceless.protocol.RspRegisterGroup)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&result_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&group_id_) -
      reinterpret_cast<char*>(&result_)) + sizeof(group_id_));
  _internal_metadata_.Clear();
}

bool RspRegisterGroup::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:spaceless.protocol.RspRegisterGroup)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 group_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &group_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:spaceless.protocol.RspRegisterGroup)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:spaceless.protocol.RspRegisterGroup)
  return false;
#undef DO_
}

void RspRegisterGroup::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:spaceless.protocol.RspRegisterGroup)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 result = 1;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // int32 group_id = 2;
  if (this->group_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->group_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:spaceless.protocol.RspRegisterGroup)
}

::google::protobuf::uint8* RspRegisterGroup::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:spaceless.protocol.RspRegisterGroup)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 result = 1;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // int32 group_id = 2;
  if (this->group_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->group_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:spaceless.protocol.RspRegisterGroup)
  return target;
}

size_t RspRegisterGroup::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:spaceless.protocol.RspRegisterGroup)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 result = 1;
  if (this->result() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->result());
  }

  // int32 group_id = 2;
  if (this->group_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->group_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RspRegisterGroup::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:spaceless.protocol.RspRegisterGroup)
  GOOGLE_DCHECK_NE(&from, this);
  const RspRegisterGroup* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RspRegisterGroup>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:spaceless.protocol.RspRegisterGroup)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:spaceless.protocol.RspRegisterGroup)
    MergeFrom(*source);
  }
}

void RspRegisterGroup::MergeFrom(const RspRegisterGroup& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:spaceless.protocol.RspRegisterGroup)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    set_result(from.result());
  }
  if (from.group_id() != 0) {
    set_group_id(from.group_id());
  }
}

void RspRegisterGroup::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:spaceless.protocol.RspRegisterGroup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RspRegisterGroup::CopyFrom(const RspRegisterGroup& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:spaceless.protocol.RspRegisterGroup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RspRegisterGroup::IsInitialized() const {
  return true;
}

void RspRegisterGroup::Swap(RspRegisterGroup* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RspRegisterGroup::InternalSwap(RspRegisterGroup* other) {
  using std::swap;
  swap(result_, other->result_);
  swap(group_id_, other->group_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RspRegisterGroup::GetMetadata() const {
  protobuf_protocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ReqRemoveGroup::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReqRemoveGroup::kGroupIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReqRemoveGroup::ReqRemoveGroup()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protocol_2eproto::scc_info_ReqRemoveGroup.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:spaceless.protocol.ReqRemoveGroup)
}
ReqRemoveGroup::ReqRemoveGroup(const ReqRemoveGroup& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  group_id_ = from.group_id_;
  // @@protoc_insertion_point(copy_constructor:spaceless.protocol.ReqRemoveGroup)
}

void ReqRemoveGroup::SharedCtor() {
  group_id_ = 0;
}

ReqRemoveGroup::~ReqRemoveGroup() {
  // @@protoc_insertion_point(destructor:spaceless.protocol.ReqRemoveGroup)
  SharedDtor();
}

void ReqRemoveGroup::SharedDtor() {
}

void ReqRemoveGroup::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ReqRemoveGroup::descriptor() {
  ::protobuf_protocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ReqRemoveGroup& ReqRemoveGroup::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protocol_2eproto::scc_info_ReqRemoveGroup.base);
  return *internal_default_instance();
}


void ReqRemoveGroup::Clear() {
// @@protoc_insertion_point(message_clear_start:spaceless.protocol.ReqRemoveGroup)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  group_id_ = 0;
  _internal_metadata_.Clear();
}

bool ReqRemoveGroup::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:spaceless.protocol.ReqRemoveGroup)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 group_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &group_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:spaceless.protocol.ReqRemoveGroup)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:spaceless.protocol.ReqRemoveGroup)
  return false;
#undef DO_
}

void ReqRemoveGroup::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:spaceless.protocol.ReqRemoveGroup)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 group_id = 1;
  if (this->group_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->group_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:spaceless.protocol.ReqRemoveGroup)
}

::google::protobuf::uint8* ReqRemoveGroup::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:spaceless.protocol.ReqRemoveGroup)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 group_id = 1;
  if (this->group_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->group_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:spaceless.protocol.ReqRemoveGroup)
  return target;
}

size_t ReqRemoveGroup::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:spaceless.protocol.ReqRemoveGroup)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 group_id = 1;
  if (this->group_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->group_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReqRemoveGroup::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:spaceless.protocol.ReqRemoveGroup)
  GOOGLE_DCHECK_NE(&from, this);
  const ReqRemoveGroup* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReqRemoveGroup>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:spaceless.protocol.ReqRemoveGroup)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:spaceless.protocol.ReqRemoveGroup)
    MergeFrom(*source);
  }
}

void ReqRemoveGroup::MergeFrom(const ReqRemoveGroup& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:spaceless.protocol.ReqRemoveGroup)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.group_id() != 0) {
    set_group_id(from.group_id());
  }
}

void ReqRemoveGroup::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:spaceless.protocol.ReqRemoveGroup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReqRemoveGroup::CopyFrom(const ReqRemoveGroup& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:spaceless.protocol.ReqRemoveGroup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReqRemoveGroup::IsInitialized() const {
  return true;
}

void ReqRemoveGroup::Swap(ReqRemoveGroup* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReqRemoveGroup::InternalSwap(ReqRemoveGroup* other) {
  using std::swap;
  swap(group_id_, other->group_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ReqRemoveGroup::GetMetadata() const {
  protobuf_protocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RspRemoveGroup::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RspRemoveGroup::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RspRemoveGroup::RspRemoveGroup()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protocol_2eproto::scc_info_RspRemoveGroup.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:spaceless.protocol.RspRemoveGroup)
}
RspRemoveGroup::RspRemoveGroup(const RspRemoveGroup& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:spaceless.protocol.RspRemoveGroup)
}

void RspRemoveGroup::SharedCtor() {
  result_ = false;
}

RspRemoveGroup::~RspRemoveGroup() {
  // @@protoc_insertion_point(destructor:spaceless.protocol.RspRemoveGroup)
  SharedDtor();
}

void RspRemoveGroup::SharedDtor() {
}

void RspRemoveGroup::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RspRemoveGroup::descriptor() {
  ::protobuf_protocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RspRemoveGroup& RspRemoveGroup::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protocol_2eproto::scc_info_RspRemoveGroup.base);
  return *internal_default_instance();
}


void RspRemoveGroup::Clear() {
// @@protoc_insertion_point(message_clear_start:spaceless.protocol.RspRemoveGroup)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = false;
  _internal_metadata_.Clear();
}

bool RspRemoveGroup::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:spaceless.protocol.RspRemoveGroup)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:spaceless.protocol.RspRemoveGroup)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:spaceless.protocol.RspRemoveGroup)
  return false;
#undef DO_
}

void RspRemoveGroup::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:spaceless.protocol.RspRemoveGroup)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->result(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:spaceless.protocol.RspRemoveGroup)
}

::google::protobuf::uint8* RspRemoveGroup::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:spaceless.protocol.RspRemoveGroup)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->result(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:spaceless.protocol.RspRemoveGroup)
  return target;
}

size_t RspRemoveGroup::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:spaceless.protocol.RspRemoveGroup)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool result = 1;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RspRemoveGroup::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:spaceless.protocol.RspRemoveGroup)
  GOOGLE_DCHECK_NE(&from, this);
  const RspRemoveGroup* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RspRemoveGroup>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:spaceless.protocol.RspRemoveGroup)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:spaceless.protocol.RspRemoveGroup)
    MergeFrom(*source);
  }
}

void RspRemoveGroup::MergeFrom(const RspRemoveGroup& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:spaceless.protocol.RspRemoveGroup)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    set_result(from.result());
  }
}

void RspRemoveGroup::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:spaceless.protocol.RspRemoveGroup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RspRemoveGroup::CopyFrom(const RspRemoveGroup& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:spaceless.protocol.RspRemoveGroup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RspRemoveGroup::IsInitialized() const {
  return true;
}

void RspRemoveGroup::Swap(RspRemoveGroup* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RspRemoveGroup::InternalSwap(RspRemoveGroup* other) {
  using std::swap;
  swap(result_, other->result_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RspRemoveGroup::GetMetadata() const {
  protobuf_protocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ReqFindGroup::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReqFindGroup::kGroupIdFieldNumber;
const int ReqFindGroup::kGroupNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReqFindGroup::ReqFindGroup()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protocol_2eproto::scc_info_ReqFindGroup.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:spaceless.protocol.ReqFindGroup)
}
ReqFindGroup::ReqFindGroup(const ReqFindGroup& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  group_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.group_name().size() > 0) {
    group_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.group_name_);
  }
  group_id_ = from.group_id_;
  // @@protoc_insertion_point(copy_constructor:spaceless.protocol.ReqFindGroup)
}

void ReqFindGroup::SharedCtor() {
  group_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  group_id_ = 0;
}

ReqFindGroup::~ReqFindGroup() {
  // @@protoc_insertion_point(destructor:spaceless.protocol.ReqFindGroup)
  SharedDtor();
}

void ReqFindGroup::SharedDtor() {
  group_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ReqFindGroup::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ReqFindGroup::descriptor() {
  ::protobuf_protocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ReqFindGroup& ReqFindGroup::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protocol_2eproto::scc_info_ReqFindGroup.base);
  return *internal_default_instance();
}


void ReqFindGroup::Clear() {
// @@protoc_insertion_point(message_clear_start:spaceless.protocol.ReqFindGroup)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  group_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  group_id_ = 0;
  _internal_metadata_.Clear();
}

bool ReqFindGroup::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:spaceless.protocol.ReqFindGroup)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 group_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &group_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string group_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_group_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->group_name().data(), static_cast<int>(this->group_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "spaceless.protocol.ReqFindGroup.group_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:spaceless.protocol.ReqFindGroup)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:spaceless.protocol.ReqFindGroup)
  return false;
#undef DO_
}

void ReqFindGroup::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:spaceless.protocol.ReqFindGroup)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 group_id = 1;
  if (this->group_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->group_id(), output);
  }

  // string group_name = 2;
  if (this->group_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->group_name().data(), static_cast<int>(this->group_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "spaceless.protocol.ReqFindGroup.group_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->group_name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:spaceless.protocol.ReqFindGroup)
}

::google::protobuf::uint8* ReqFindGroup::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:spaceless.protocol.ReqFindGroup)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 group_id = 1;
  if (this->group_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->group_id(), target);
  }

  // string group_name = 2;
  if (this->group_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->group_name().data(), static_cast<int>(this->group_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "spaceless.protocol.ReqFindGroup.group_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->group_name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:spaceless.protocol.ReqFindGroup)
  return target;
}

size_t ReqFindGroup::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:spaceless.protocol.ReqFindGroup)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string group_name = 2;
  if (this->group_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->group_name());
  }

  // int32 group_id = 1;
  if (this->group_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->group_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReqFindGroup::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:spaceless.protocol.ReqFindGroup)
  GOOGLE_DCHECK_NE(&from, this);
  const ReqFindGroup* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReqFindGroup>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:spaceless.protocol.ReqFindGroup)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:spaceless.protocol.ReqFindGroup)
    MergeFrom(*source);
  }
}

void ReqFindGroup::MergeFrom(const ReqFindGroup& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:spaceless.protocol.ReqFindGroup)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.group_name().size() > 0) {

    group_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.group_name_);
  }
  if (from.group_id() != 0) {
    set_group_id(from.group_id());
  }
}

void ReqFindGroup::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:spaceless.protocol.ReqFindGroup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReqFindGroup::CopyFrom(const ReqFindGroup& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:spaceless.protocol.ReqFindGroup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReqFindGroup::IsInitialized() const {
  return true;
}

void ReqFindGroup::Swap(ReqFindGroup* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReqFindGroup::InternalSwap(ReqFindGroup* other) {
  using std::swap;
  group_name_.Swap(&other->group_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(group_id_, other->group_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ReqFindGroup::GetMetadata() const {
  protobuf_protocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RspFindGroup::InitAsDefaultInstance() {
  ::spaceless::protocol::_RspFindGroup_default_instance_._instance.get_mutable()->group_ = const_cast< ::spaceless::protocol::SharingGroup*>(
      ::spaceless::protocol::SharingGroup::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RspFindGroup::kResultFieldNumber;
const int RspFindGroup::kGroupFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RspFindGroup::RspFindGroup()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protocol_2eproto::scc_info_RspFindGroup.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:spaceless.protocol.RspFindGroup)
}
RspFindGroup::RspFindGroup(const RspFindGroup& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_group()) {
    group_ = new ::spaceless::protocol::SharingGroup(*from.group_);
  } else {
    group_ = NULL;
  }
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:spaceless.protocol.RspFindGroup)
}

void RspFindGroup::SharedCtor() {
  ::memset(&group_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&result_) -
      reinterpret_cast<char*>(&group_)) + sizeof(result_));
}

RspFindGroup::~RspFindGroup() {
  // @@protoc_insertion_point(destructor:spaceless.protocol.RspFindGroup)
  SharedDtor();
}

void RspFindGroup::SharedDtor() {
  if (this != internal_default_instance()) delete group_;
}

void RspFindGroup::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RspFindGroup::descriptor() {
  ::protobuf_protocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RspFindGroup& RspFindGroup::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protocol_2eproto::scc_info_RspFindGroup.base);
  return *internal_default_instance();
}


void RspFindGroup::Clear() {
// @@protoc_insertion_point(message_clear_start:spaceless.protocol.RspFindGroup)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && group_ != NULL) {
    delete group_;
  }
  group_ = NULL;
  result_ = 0;
  _internal_metadata_.Clear();
}

bool RspFindGroup::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:spaceless.protocol.RspFindGroup)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .spaceless.protocol.SharingGroup group = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_group()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:spaceless.protocol.RspFindGroup)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:spaceless.protocol.RspFindGroup)
  return false;
#undef DO_
}

void RspFindGroup::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:spaceless.protocol.RspFindGroup)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 result = 1;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // .spaceless.protocol.SharingGroup group = 2;
  if (this->has_group()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_group(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:spaceless.protocol.RspFindGroup)
}

::google::protobuf::uint8* RspFindGroup::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:spaceless.protocol.RspFindGroup)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 result = 1;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // .spaceless.protocol.SharingGroup group = 2;
  if (this->has_group()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_group(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:spaceless.protocol.RspFindGroup)
  return target;
}

size_t RspFindGroup::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:spaceless.protocol.RspFindGroup)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .spaceless.protocol.SharingGroup group = 2;
  if (this->has_group()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *group_);
  }

  // int32 result = 1;
  if (this->result() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RspFindGroup::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:spaceless.protocol.RspFindGroup)
  GOOGLE_DCHECK_NE(&from, this);
  const RspFindGroup* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RspFindGroup>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:spaceless.protocol.RspFindGroup)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:spaceless.protocol.RspFindGroup)
    MergeFrom(*source);
  }
}

void RspFindGroup::MergeFrom(const RspFindGroup& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:spaceless.protocol.RspFindGroup)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_group()) {
    mutable_group()->::spaceless::protocol::SharingGroup::MergeFrom(from.group());
  }
  if (from.result() != 0) {
    set_result(from.result());
  }
}

void RspFindGroup::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:spaceless.protocol.RspFindGroup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RspFindGroup::CopyFrom(const RspFindGroup& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:spaceless.protocol.RspFindGroup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RspFindGroup::IsInitialized() const {
  return true;
}

void RspFindGroup::Swap(RspFindGroup* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RspFindGroup::InternalSwap(RspFindGroup* other) {
  using std::swap;
  swap(group_, other->group_);
  swap(result_, other->result_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RspFindGroup::GetMetadata() const {
  protobuf_protocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ReqJoinGroup::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReqJoinGroup::kGroupIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReqJoinGroup::ReqJoinGroup()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protocol_2eproto::scc_info_ReqJoinGroup.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:spaceless.protocol.ReqJoinGroup)
}
ReqJoinGroup::ReqJoinGroup(const ReqJoinGroup& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  group_id_ = from.group_id_;
  // @@protoc_insertion_point(copy_constructor:spaceless.protocol.ReqJoinGroup)
}

void ReqJoinGroup::SharedCtor() {
  group_id_ = 0;
}

ReqJoinGroup::~ReqJoinGroup() {
  // @@protoc_insertion_point(destructor:spaceless.protocol.ReqJoinGroup)
  SharedDtor();
}

void ReqJoinGroup::SharedDtor() {
}

void ReqJoinGroup::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ReqJoinGroup::descriptor() {
  ::protobuf_protocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ReqJoinGroup& ReqJoinGroup::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protocol_2eproto::scc_info_ReqJoinGroup.base);
  return *internal_default_instance();
}


void ReqJoinGroup::Clear() {
// @@protoc_insertion_point(message_clear_start:spaceless.protocol.ReqJoinGroup)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  group_id_ = 0;
  _internal_metadata_.Clear();
}

bool ReqJoinGroup::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:spaceless.protocol.ReqJoinGroup)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 group_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &group_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:spaceless.protocol.ReqJoinGroup)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:spaceless.protocol.ReqJoinGroup)
  return false;
#undef DO_
}

void ReqJoinGroup::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:spaceless.protocol.ReqJoinGroup)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 group_id = 1;
  if (this->group_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->group_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:spaceless.protocol.ReqJoinGroup)
}

::google::protobuf::uint8* ReqJoinGroup::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:spaceless.protocol.ReqJoinGroup)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 group_id = 1;
  if (this->group_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->group_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:spaceless.protocol.ReqJoinGroup)
  return target;
}

size_t ReqJoinGroup::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:spaceless.protocol.ReqJoinGroup)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 group_id = 1;
  if (this->group_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->group_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReqJoinGroup::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:spaceless.protocol.ReqJoinGroup)
  GOOGLE_DCHECK_NE(&from, this);
  const ReqJoinGroup* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReqJoinGroup>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:spaceless.protocol.ReqJoinGroup)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:spaceless.protocol.ReqJoinGroup)
    MergeFrom(*source);
  }
}

void ReqJoinGroup::MergeFrom(const ReqJoinGroup& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:spaceless.protocol.ReqJoinGroup)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.group_id() != 0) {
    set_group_id(from.group_id());
  }
}

void ReqJoinGroup::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:spaceless.protocol.ReqJoinGroup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReqJoinGroup::CopyFrom(const ReqJoinGroup& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:spaceless.protocol.ReqJoinGroup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReqJoinGroup::IsInitialized() const {
  return true;
}

void ReqJoinGroup::Swap(ReqJoinGroup* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReqJoinGroup::InternalSwap(ReqJoinGroup* other) {
  using std::swap;
  swap(group_id_, other->group_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ReqJoinGroup::GetMetadata() const {
  protobuf_protocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RspJoinGroup::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RspJoinGroup::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RspJoinGroup::RspJoinGroup()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protocol_2eproto::scc_info_RspJoinGroup.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:spaceless.protocol.RspJoinGroup)
}
RspJoinGroup::RspJoinGroup(const RspJoinGroup& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:spaceless.protocol.RspJoinGroup)
}

void RspJoinGroup::SharedCtor() {
  result_ = 0;
}

RspJoinGroup::~RspJoinGroup() {
  // @@protoc_insertion_point(destructor:spaceless.protocol.RspJoinGroup)
  SharedDtor();
}

void RspJoinGroup::SharedDtor() {
}

void RspJoinGroup::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RspJoinGroup::descriptor() {
  ::protobuf_protocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RspJoinGroup& RspJoinGroup::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protocol_2eproto::scc_info_RspJoinGroup.base);
  return *internal_default_instance();
}


void RspJoinGroup::Clear() {
// @@protoc_insertion_point(message_clear_start:spaceless.protocol.RspJoinGroup)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = 0;
  _internal_metadata_.Clear();
}

bool RspJoinGroup::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:spaceless.protocol.RspJoinGroup)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:spaceless.protocol.RspJoinGroup)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:spaceless.protocol.RspJoinGroup)
  return false;
#undef DO_
}

void RspJoinGroup::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:spaceless.protocol.RspJoinGroup)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 result = 1;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:spaceless.protocol.RspJoinGroup)
}

::google::protobuf::uint8* RspJoinGroup::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:spaceless.protocol.RspJoinGroup)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 result = 1;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:spaceless.protocol.RspJoinGroup)
  return target;
}

size_t RspJoinGroup::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:spaceless.protocol.RspJoinGroup)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 result = 1;
  if (this->result() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RspJoinGroup::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:spaceless.protocol.RspJoinGroup)
  GOOGLE_DCHECK_NE(&from, this);
  const RspJoinGroup* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RspJoinGroup>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:spaceless.protocol.RspJoinGroup)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:spaceless.protocol.RspJoinGroup)
    MergeFrom(*source);
  }
}

void RspJoinGroup::MergeFrom(const RspJoinGroup& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:spaceless.protocol.RspJoinGroup)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    set_result(from.result());
  }
}

void RspJoinGroup::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:spaceless.protocol.RspJoinGroup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RspJoinGroup::CopyFrom(const RspJoinGroup& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:spaceless.protocol.RspJoinGroup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RspJoinGroup::IsInitialized() const {
  return true;
}

void RspJoinGroup::Swap(RspJoinGroup* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RspJoinGroup::InternalSwap(RspJoinGroup* other) {
  using std::swap;
  swap(result_, other->result_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RspJoinGroup::GetMetadata() const {
  protobuf_protocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ReqAssignAsManager::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReqAssignAsManager::kGroupIdFieldNumber;
const int ReqAssignAsManager::kUserIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReqAssignAsManager::ReqAssignAsManager()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protocol_2eproto::scc_info_ReqAssignAsManager.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:spaceless.protocol.ReqAssignAsManager)
}
ReqAssignAsManager::ReqAssignAsManager(const ReqAssignAsManager& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&group_id_, &from.group_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&user_id_) -
    reinterpret_cast<char*>(&group_id_)) + sizeof(user_id_));
  // @@protoc_insertion_point(copy_constructor:spaceless.protocol.ReqAssignAsManager)
}

void ReqAssignAsManager::SharedCtor() {
  ::memset(&group_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&user_id_) -
      reinterpret_cast<char*>(&group_id_)) + sizeof(user_id_));
}

ReqAssignAsManager::~ReqAssignAsManager() {
  // @@protoc_insertion_point(destructor:spaceless.protocol.ReqAssignAsManager)
  SharedDtor();
}

void ReqAssignAsManager::SharedDtor() {
}

void ReqAssignAsManager::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ReqAssignAsManager::descriptor() {
  ::protobuf_protocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ReqAssignAsManager& ReqAssignAsManager::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protocol_2eproto::scc_info_ReqAssignAsManager.base);
  return *internal_default_instance();
}


void ReqAssignAsManager::Clear() {
// @@protoc_insertion_point(message_clear_start:spaceless.protocol.ReqAssignAsManager)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&group_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&user_id_) -
      reinterpret_cast<char*>(&group_id_)) + sizeof(user_id_));
  _internal_metadata_.Clear();
}

bool ReqAssignAsManager::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:spaceless.protocol.ReqAssignAsManager)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 group_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &group_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 user_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &user_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:spaceless.protocol.ReqAssignAsManager)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:spaceless.protocol.ReqAssignAsManager)
  return false;
#undef DO_
}

void ReqAssignAsManager::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:spaceless.protocol.ReqAssignAsManager)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 group_id = 1;
  if (this->group_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->group_id(), output);
  }

  // int32 user_id = 2;
  if (this->user_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->user_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:spaceless.protocol.ReqAssignAsManager)
}

::google::protobuf::uint8* ReqAssignAsManager::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:spaceless.protocol.ReqAssignAsManager)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 group_id = 1;
  if (this->group_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->group_id(), target);
  }

  // int32 user_id = 2;
  if (this->user_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->user_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:spaceless.protocol.ReqAssignAsManager)
  return target;
}

size_t ReqAssignAsManager::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:spaceless.protocol.ReqAssignAsManager)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 group_id = 1;
  if (this->group_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->group_id());
  }

  // int32 user_id = 2;
  if (this->user_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->user_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReqAssignAsManager::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:spaceless.protocol.ReqAssignAsManager)
  GOOGLE_DCHECK_NE(&from, this);
  const ReqAssignAsManager* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReqAssignAsManager>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:spaceless.protocol.ReqAssignAsManager)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:spaceless.protocol.ReqAssignAsManager)
    MergeFrom(*source);
  }
}

void ReqAssignAsManager::MergeFrom(const ReqAssignAsManager& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:spaceless.protocol.ReqAssignAsManager)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.group_id() != 0) {
    set_group_id(from.group_id());
  }
  if (from.user_id() != 0) {
    set_user_id(from.user_id());
  }
}

void ReqAssignAsManager::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:spaceless.protocol.ReqAssignAsManager)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReqAssignAsManager::CopyFrom(const ReqAssignAsManager& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:spaceless.protocol.ReqAssignAsManager)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReqAssignAsManager::IsInitialized() const {
  return true;
}

void ReqAssignAsManager::Swap(ReqAssignAsManager* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReqAssignAsManager::InternalSwap(ReqAssignAsManager* other) {
  using std::swap;
  swap(group_id_, other->group_id_);
  swap(user_id_, other->user_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ReqAssignAsManager::GetMetadata() const {
  protobuf_protocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RspAssignAsManager::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RspAssignAsManager::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RspAssignAsManager::RspAssignAsManager()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protocol_2eproto::scc_info_RspAssignAsManager.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:spaceless.protocol.RspAssignAsManager)
}
RspAssignAsManager::RspAssignAsManager(const RspAssignAsManager& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:spaceless.protocol.RspAssignAsManager)
}

void RspAssignAsManager::SharedCtor() {
  result_ = 0;
}

RspAssignAsManager::~RspAssignAsManager() {
  // @@protoc_insertion_point(destructor:spaceless.protocol.RspAssignAsManager)
  SharedDtor();
}

void RspAssignAsManager::SharedDtor() {
}

void RspAssignAsManager::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RspAssignAsManager::descriptor() {
  ::protobuf_protocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RspAssignAsManager& RspAssignAsManager::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protocol_2eproto::scc_info_RspAssignAsManager.base);
  return *internal_default_instance();
}


void RspAssignAsManager::Clear() {
// @@protoc_insertion_point(message_clear_start:spaceless.protocol.RspAssignAsManager)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = 0;
  _internal_metadata_.Clear();
}

bool RspAssignAsManager::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:spaceless.protocol.RspAssignAsManager)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:spaceless.protocol.RspAssignAsManager)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:spaceless.protocol.RspAssignAsManager)
  return false;
#undef DO_
}

void RspAssignAsManager::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:spaceless.protocol.RspAssignAsManager)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 result = 1;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:spaceless.protocol.RspAssignAsManager)
}

::google::protobuf::uint8* RspAssignAsManager::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:spaceless.protocol.RspAssignAsManager)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 result = 1;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:spaceless.protocol.RspAssignAsManager)
  return target;
}

size_t RspAssignAsManager::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:spaceless.protocol.RspAssignAsManager)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 result = 1;
  if (this->result() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RspAssignAsManager::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:spaceless.protocol.RspAssignAsManager)
  GOOGLE_DCHECK_NE(&from, this);
  const RspAssignAsManager* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RspAssignAsManager>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:spaceless.protocol.RspAssignAsManager)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:spaceless.protocol.RspAssignAsManager)
    MergeFrom(*source);
  }
}

void RspAssignAsManager::MergeFrom(const RspAssignAsManager& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:spaceless.protocol.RspAssignAsManager)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    set_result(from.result());
  }
}

void RspAssignAsManager::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:spaceless.protocol.RspAssignAsManager)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RspAssignAsManager::CopyFrom(const RspAssignAsManager& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:spaceless.protocol.RspAssignAsManager)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RspAssignAsManager::IsInitialized() const {
  return true;
}

void RspAssignAsManager::Swap(RspAssignAsManager* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RspAssignAsManager::InternalSwap(RspAssignAsManager* other) {
  using std::swap;
  swap(result_, other->result_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RspAssignAsManager::GetMetadata() const {
  protobuf_protocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ReqAssignAsMemeber::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReqAssignAsMemeber::kGroupIdFieldNumber;
const int ReqAssignAsMemeber::kUserIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReqAssignAsMemeber::ReqAssignAsMemeber()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protocol_2eproto::scc_info_ReqAssignAsMemeber.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:spaceless.protocol.ReqAssignAsMemeber)
}
ReqAssignAsMemeber::ReqAssignAsMemeber(const ReqAssignAsMemeber& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&group_id_, &from.group_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&user_id_) -
    reinterpret_cast<char*>(&group_id_)) + sizeof(user_id_));
  // @@protoc_insertion_point(copy_constructor:spaceless.protocol.ReqAssignAsMemeber)
}

void ReqAssignAsMemeber::SharedCtor() {
  ::memset(&group_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&user_id_) -
      reinterpret_cast<char*>(&group_id_)) + sizeof(user_id_));
}

ReqAssignAsMemeber::~ReqAssignAsMemeber() {
  // @@protoc_insertion_point(destructor:spaceless.protocol.ReqAssignAsMemeber)
  SharedDtor();
}

void ReqAssignAsMemeber::SharedDtor() {
}

void ReqAssignAsMemeber::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ReqAssignAsMemeber::descriptor() {
  ::protobuf_protocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ReqAssignAsMemeber& ReqAssignAsMemeber::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protocol_2eproto::scc_info_ReqAssignAsMemeber.base);
  return *internal_default_instance();
}


void ReqAssignAsMemeber::Clear() {
// @@protoc_insertion_point(message_clear_start:spaceless.protocol.ReqAssignAsMemeber)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&group_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&user_id_) -
      reinterpret_cast<char*>(&group_id_)) + sizeof(user_id_));
  _internal_metadata_.Clear();
}

bool ReqAssignAsMemeber::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:spaceless.protocol.ReqAssignAsMemeber)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 group_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &group_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 user_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &user_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:spaceless.protocol.ReqAssignAsMemeber)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:spaceless.protocol.ReqAssignAsMemeber)
  return false;
#undef DO_
}

void ReqAssignAsMemeber::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:spaceless.protocol.ReqAssignAsMemeber)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 group_id = 1;
  if (this->group_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->group_id(), output);
  }

  // int32 user_id = 2;
  if (this->user_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->user_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:spaceless.protocol.ReqAssignAsMemeber)
}

::google::protobuf::uint8* ReqAssignAsMemeber::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:spaceless.protocol.ReqAssignAsMemeber)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 group_id = 1;
  if (this->group_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->group_id(), target);
  }

  // int32 user_id = 2;
  if (this->user_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->user_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:spaceless.protocol.ReqAssignAsMemeber)
  return target;
}

size_t ReqAssignAsMemeber::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:spaceless.protocol.ReqAssignAsMemeber)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 group_id = 1;
  if (this->group_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->group_id());
  }

  // int32 user_id = 2;
  if (this->user_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->user_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReqAssignAsMemeber::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:spaceless.protocol.ReqAssignAsMemeber)
  GOOGLE_DCHECK_NE(&from, this);
  const ReqAssignAsMemeber* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReqAssignAsMemeber>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:spaceless.protocol.ReqAssignAsMemeber)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:spaceless.protocol.ReqAssignAsMemeber)
    MergeFrom(*source);
  }
}

void ReqAssignAsMemeber::MergeFrom(const ReqAssignAsMemeber& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:spaceless.protocol.ReqAssignAsMemeber)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.group_id() != 0) {
    set_group_id(from.group_id());
  }
  if (from.user_id() != 0) {
    set_user_id(from.user_id());
  }
}

void ReqAssignAsMemeber::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:spaceless.protocol.ReqAssignAsMemeber)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReqAssignAsMemeber::CopyFrom(const ReqAssignAsMemeber& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:spaceless.protocol.ReqAssignAsMemeber)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReqAssignAsMemeber::IsInitialized() const {
  return true;
}

void ReqAssignAsMemeber::Swap(ReqAssignAsMemeber* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReqAssignAsMemeber::InternalSwap(ReqAssignAsMemeber* other) {
  using std::swap;
  swap(group_id_, other->group_id_);
  swap(user_id_, other->user_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ReqAssignAsMemeber::GetMetadata() const {
  protobuf_protocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RspAssignAsMemeber::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RspAssignAsMemeber::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RspAssignAsMemeber::RspAssignAsMemeber()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protocol_2eproto::scc_info_RspAssignAsMemeber.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:spaceless.protocol.RspAssignAsMemeber)
}
RspAssignAsMemeber::RspAssignAsMemeber(const RspAssignAsMemeber& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:spaceless.protocol.RspAssignAsMemeber)
}

void RspAssignAsMemeber::SharedCtor() {
  result_ = 0;
}

RspAssignAsMemeber::~RspAssignAsMemeber() {
  // @@protoc_insertion_point(destructor:spaceless.protocol.RspAssignAsMemeber)
  SharedDtor();
}

void RspAssignAsMemeber::SharedDtor() {
}

void RspAssignAsMemeber::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RspAssignAsMemeber::descriptor() {
  ::protobuf_protocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RspAssignAsMemeber& RspAssignAsMemeber::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protocol_2eproto::scc_info_RspAssignAsMemeber.base);
  return *internal_default_instance();
}


void RspAssignAsMemeber::Clear() {
// @@protoc_insertion_point(message_clear_start:spaceless.protocol.RspAssignAsMemeber)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = 0;
  _internal_metadata_.Clear();
}

bool RspAssignAsMemeber::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:spaceless.protocol.RspAssignAsMemeber)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:spaceless.protocol.RspAssignAsMemeber)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:spaceless.protocol.RspAssignAsMemeber)
  return false;
#undef DO_
}

void RspAssignAsMemeber::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:spaceless.protocol.RspAssignAsMemeber)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 result = 1;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:spaceless.protocol.RspAssignAsMemeber)
}

::google::protobuf::uint8* RspAssignAsMemeber::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:spaceless.protocol.RspAssignAsMemeber)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 result = 1;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:spaceless.protocol.RspAssignAsMemeber)
  return target;
}

size_t RspAssignAsMemeber::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:spaceless.protocol.RspAssignAsMemeber)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 result = 1;
  if (this->result() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RspAssignAsMemeber::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:spaceless.protocol.RspAssignAsMemeber)
  GOOGLE_DCHECK_NE(&from, this);
  const RspAssignAsMemeber* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RspAssignAsMemeber>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:spaceless.protocol.RspAssignAsMemeber)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:spaceless.protocol.RspAssignAsMemeber)
    MergeFrom(*source);
  }
}

void RspAssignAsMemeber::MergeFrom(const RspAssignAsMemeber& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:spaceless.protocol.RspAssignAsMemeber)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    set_result(from.result());
  }
}

void RspAssignAsMemeber::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:spaceless.protocol.RspAssignAsMemeber)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RspAssignAsMemeber::CopyFrom(const RspAssignAsMemeber& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:spaceless.protocol.RspAssignAsMemeber)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RspAssignAsMemeber::IsInitialized() const {
  return true;
}

void RspAssignAsMemeber::Swap(RspAssignAsMemeber* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RspAssignAsMemeber::InternalSwap(RspAssignAsMemeber* other) {
  using std::swap;
  swap(result_, other->result_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RspAssignAsMemeber::GetMetadata() const {
  protobuf_protocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ReqKickOutUser::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReqKickOutUser::kGroupIdFieldNumber;
const int ReqKickOutUser::kUserIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReqKickOutUser::ReqKickOutUser()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protocol_2eproto::scc_info_ReqKickOutUser.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:spaceless.protocol.ReqKickOutUser)
}
ReqKickOutUser::ReqKickOutUser(const ReqKickOutUser& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&group_id_, &from.group_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&user_id_) -
    reinterpret_cast<char*>(&group_id_)) + sizeof(user_id_));
  // @@protoc_insertion_point(copy_constructor:spaceless.protocol.ReqKickOutUser)
}

void ReqKickOutUser::SharedCtor() {
  ::memset(&group_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&user_id_) -
      reinterpret_cast<char*>(&group_id_)) + sizeof(user_id_));
}

ReqKickOutUser::~ReqKickOutUser() {
  // @@protoc_insertion_point(destructor:spaceless.protocol.ReqKickOutUser)
  SharedDtor();
}

void ReqKickOutUser::SharedDtor() {
}

void ReqKickOutUser::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ReqKickOutUser::descriptor() {
  ::protobuf_protocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ReqKickOutUser& ReqKickOutUser::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protocol_2eproto::scc_info_ReqKickOutUser.base);
  return *internal_default_instance();
}


void ReqKickOutUser::Clear() {
// @@protoc_insertion_point(message_clear_start:spaceless.protocol.ReqKickOutUser)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&group_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&user_id_) -
      reinterpret_cast<char*>(&group_id_)) + sizeof(user_id_));
  _internal_metadata_.Clear();
}

bool ReqKickOutUser::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:spaceless.protocol.ReqKickOutUser)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 group_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &group_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 user_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &user_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:spaceless.protocol.ReqKickOutUser)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:spaceless.protocol.ReqKickOutUser)
  return false;
#undef DO_
}

void ReqKickOutUser::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:spaceless.protocol.ReqKickOutUser)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 group_id = 1;
  if (this->group_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->group_id(), output);
  }

  // int32 user_id = 2;
  if (this->user_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->user_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:spaceless.protocol.ReqKickOutUser)
}

::google::protobuf::uint8* ReqKickOutUser::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:spaceless.protocol.ReqKickOutUser)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 group_id = 1;
  if (this->group_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->group_id(), target);
  }

  // int32 user_id = 2;
  if (this->user_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->user_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:spaceless.protocol.ReqKickOutUser)
  return target;
}

size_t ReqKickOutUser::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:spaceless.protocol.ReqKickOutUser)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 group_id = 1;
  if (this->group_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->group_id());
  }

  // int32 user_id = 2;
  if (this->user_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->user_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReqKickOutUser::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:spaceless.protocol.ReqKickOutUser)
  GOOGLE_DCHECK_NE(&from, this);
  const ReqKickOutUser* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReqKickOutUser>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:spaceless.protocol.ReqKickOutUser)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:spaceless.protocol.ReqKickOutUser)
    MergeFrom(*source);
  }
}

void ReqKickOutUser::MergeFrom(const ReqKickOutUser& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:spaceless.protocol.ReqKickOutUser)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.group_id() != 0) {
    set_group_id(from.group_id());
  }
  if (from.user_id() != 0) {
    set_user_id(from.user_id());
  }
}

void ReqKickOutUser::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:spaceless.protocol.ReqKickOutUser)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReqKickOutUser::CopyFrom(const ReqKickOutUser& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:spaceless.protocol.ReqKickOutUser)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReqKickOutUser::IsInitialized() const {
  return true;
}

void ReqKickOutUser::Swap(ReqKickOutUser* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReqKickOutUser::InternalSwap(ReqKickOutUser* other) {
  using std::swap;
  swap(group_id_, other->group_id_);
  swap(user_id_, other->user_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ReqKickOutUser::GetMetadata() const {
  protobuf_protocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RspKickOutUser::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RspKickOutUser::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RspKickOutUser::RspKickOutUser()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protocol_2eproto::scc_info_RspKickOutUser.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:spaceless.protocol.RspKickOutUser)
}
RspKickOutUser::RspKickOutUser(const RspKickOutUser& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:spaceless.protocol.RspKickOutUser)
}

void RspKickOutUser::SharedCtor() {
  result_ = 0;
}

RspKickOutUser::~RspKickOutUser() {
  // @@protoc_insertion_point(destructor:spaceless.protocol.RspKickOutUser)
  SharedDtor();
}

void RspKickOutUser::SharedDtor() {
}

void RspKickOutUser::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RspKickOutUser::descriptor() {
  ::protobuf_protocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RspKickOutUser& RspKickOutUser::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protocol_2eproto::scc_info_RspKickOutUser.base);
  return *internal_default_instance();
}


void RspKickOutUser::Clear() {
// @@protoc_insertion_point(message_clear_start:spaceless.protocol.RspKickOutUser)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = 0;
  _internal_metadata_.Clear();
}

bool RspKickOutUser::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:spaceless.protocol.RspKickOutUser)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:spaceless.protocol.RspKickOutUser)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:spaceless.protocol.RspKickOutUser)
  return false;
#undef DO_
}

void RspKickOutUser::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:spaceless.protocol.RspKickOutUser)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 result = 1;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:spaceless.protocol.RspKickOutUser)
}

::google::protobuf::uint8* RspKickOutUser::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:spaceless.protocol.RspKickOutUser)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 result = 1;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:spaceless.protocol.RspKickOutUser)
  return target;
}

size_t RspKickOutUser::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:spaceless.protocol.RspKickOutUser)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 result = 1;
  if (this->result() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RspKickOutUser::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:spaceless.protocol.RspKickOutUser)
  GOOGLE_DCHECK_NE(&from, this);
  const RspKickOutUser* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RspKickOutUser>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:spaceless.protocol.RspKickOutUser)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:spaceless.protocol.RspKickOutUser)
    MergeFrom(*source);
  }
}

void RspKickOutUser::MergeFrom(const RspKickOutUser& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:spaceless.protocol.RspKickOutUser)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    set_result(from.result());
  }
}

void RspKickOutUser::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:spaceless.protocol.RspKickOutUser)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RspKickOutUser::CopyFrom(const RspKickOutUser& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:spaceless.protocol.RspKickOutUser)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RspKickOutUser::IsInitialized() const {
  return true;
}

void RspKickOutUser::Swap(RspKickOutUser* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RspKickOutUser::InternalSwap(RspKickOutUser* other) {
  using std::swap;
  swap(result_, other->result_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RspKickOutUser::GetMetadata() const {
  protobuf_protocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FileFragment::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FileFragment::kMaxFragmentFieldNumber;
const int FileFragment::kFragmentIndexFieldNumber;
const int FileFragment::kFragmentContentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FileFragment::FileFragment()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protocol_2eproto::scc_info_FileFragment.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:spaceless.protocol.FileFragment)
}
FileFragment::FileFragment(const FileFragment& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  fragment_content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.fragment_content().size() > 0) {
    fragment_content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fragment_content_);
  }
  ::memcpy(&max_fragment_, &from.max_fragment_,
    static_cast<size_t>(reinterpret_cast<char*>(&fragment_index_) -
    reinterpret_cast<char*>(&max_fragment_)) + sizeof(fragment_index_));
  // @@protoc_insertion_point(copy_constructor:spaceless.protocol.FileFragment)
}

void FileFragment::SharedCtor() {
  fragment_content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&max_fragment_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&fragment_index_) -
      reinterpret_cast<char*>(&max_fragment_)) + sizeof(fragment_index_));
}

FileFragment::~FileFragment() {
  // @@protoc_insertion_point(destructor:spaceless.protocol.FileFragment)
  SharedDtor();
}

void FileFragment::SharedDtor() {
  fragment_content_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void FileFragment::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* FileFragment::descriptor() {
  ::protobuf_protocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FileFragment& FileFragment::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protocol_2eproto::scc_info_FileFragment.base);
  return *internal_default_instance();
}


void FileFragment::Clear() {
// @@protoc_insertion_point(message_clear_start:spaceless.protocol.FileFragment)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  fragment_content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&max_fragment_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&fragment_index_) -
      reinterpret_cast<char*>(&max_fragment_)) + sizeof(fragment_index_));
  _internal_metadata_.Clear();
}

bool FileFragment::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:spaceless.protocol.FileFragment)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 max_fragment = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &max_fragment_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 fragment_index = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &fragment_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes fragment_content = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_fragment_content()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:spaceless.protocol.FileFragment)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:spaceless.protocol.FileFragment)
  return false;
#undef DO_
}

void FileFragment::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:spaceless.protocol.FileFragment)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 max_fragment = 1;
  if (this->max_fragment() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->max_fragment(), output);
  }

  // int32 fragment_index = 2;
  if (this->fragment_index() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->fragment_index(), output);
  }

  // bytes fragment_content = 3;
  if (this->fragment_content().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->fragment_content(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:spaceless.protocol.FileFragment)
}

::google::protobuf::uint8* FileFragment::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:spaceless.protocol.FileFragment)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 max_fragment = 1;
  if (this->max_fragment() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->max_fragment(), target);
  }

  // int32 fragment_index = 2;
  if (this->fragment_index() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->fragment_index(), target);
  }

  // bytes fragment_content = 3;
  if (this->fragment_content().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->fragment_content(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:spaceless.protocol.FileFragment)
  return target;
}

size_t FileFragment::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:spaceless.protocol.FileFragment)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes fragment_content = 3;
  if (this->fragment_content().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->fragment_content());
  }

  // int32 max_fragment = 1;
  if (this->max_fragment() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->max_fragment());
  }

  // int32 fragment_index = 2;
  if (this->fragment_index() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->fragment_index());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FileFragment::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:spaceless.protocol.FileFragment)
  GOOGLE_DCHECK_NE(&from, this);
  const FileFragment* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FileFragment>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:spaceless.protocol.FileFragment)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:spaceless.protocol.FileFragment)
    MergeFrom(*source);
  }
}

void FileFragment::MergeFrom(const FileFragment& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:spaceless.protocol.FileFragment)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.fragment_content().size() > 0) {

    fragment_content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fragment_content_);
  }
  if (from.max_fragment() != 0) {
    set_max_fragment(from.max_fragment());
  }
  if (from.fragment_index() != 0) {
    set_fragment_index(from.fragment_index());
  }
}

void FileFragment::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:spaceless.protocol.FileFragment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FileFragment::CopyFrom(const FileFragment& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:spaceless.protocol.FileFragment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FileFragment::IsInitialized() const {
  return true;
}

void FileFragment::Swap(FileFragment* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FileFragment::InternalSwap(FileFragment* other) {
  using std::swap;
  fragment_content_.Swap(&other->fragment_content_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(max_fragment_, other->max_fragment_);
  swap(fragment_index_, other->fragment_index_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata FileFragment::GetMetadata() const {
  protobuf_protocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ReqPutFile::InitAsDefaultInstance() {
  ::spaceless::protocol::_ReqPutFile_default_instance_._instance.get_mutable()->fragment_ = const_cast< ::spaceless::protocol::FileFragment*>(
      ::spaceless::protocol::FileFragment::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReqPutFile::kGroupIdFieldNumber;
const int ReqPutFile::kFilePathFieldNumber;
const int ReqPutFile::kFragmentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReqPutFile::ReqPutFile()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protocol_2eproto::scc_info_ReqPutFile.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:spaceless.protocol.ReqPutFile)
}
ReqPutFile::ReqPutFile(const ReqPutFile& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  file_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.file_path().size() > 0) {
    file_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_path_);
  }
  if (from.has_fragment()) {
    fragment_ = new ::spaceless::protocol::FileFragment(*from.fragment_);
  } else {
    fragment_ = NULL;
  }
  group_id_ = from.group_id_;
  // @@protoc_insertion_point(copy_constructor:spaceless.protocol.ReqPutFile)
}

void ReqPutFile::SharedCtor() {
  file_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&fragment_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&group_id_) -
      reinterpret_cast<char*>(&fragment_)) + sizeof(group_id_));
}

ReqPutFile::~ReqPutFile() {
  // @@protoc_insertion_point(destructor:spaceless.protocol.ReqPutFile)
  SharedDtor();
}

void ReqPutFile::SharedDtor() {
  file_path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete fragment_;
}

void ReqPutFile::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ReqPutFile::descriptor() {
  ::protobuf_protocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ReqPutFile& ReqPutFile::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protocol_2eproto::scc_info_ReqPutFile.base);
  return *internal_default_instance();
}


void ReqPutFile::Clear() {
// @@protoc_insertion_point(message_clear_start:spaceless.protocol.ReqPutFile)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  file_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && fragment_ != NULL) {
    delete fragment_;
  }
  fragment_ = NULL;
  group_id_ = 0;
  _internal_metadata_.Clear();
}

bool ReqPutFile::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:spaceless.protocol.ReqPutFile)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 group_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &group_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string file_path = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_file_path()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->file_path().data(), static_cast<int>(this->file_path().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "spaceless.protocol.ReqPutFile.file_path"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .spaceless.protocol.FileFragment fragment = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_fragment()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:spaceless.protocol.ReqPutFile)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:spaceless.protocol.ReqPutFile)
  return false;
#undef DO_
}

void ReqPutFile::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:spaceless.protocol.ReqPutFile)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 group_id = 1;
  if (this->group_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->group_id(), output);
  }

  // string file_path = 2;
  if (this->file_path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->file_path().data(), static_cast<int>(this->file_path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "spaceless.protocol.ReqPutFile.file_path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->file_path(), output);
  }

  // .spaceless.protocol.FileFragment fragment = 3;
  if (this->has_fragment()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_fragment(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:spaceless.protocol.ReqPutFile)
}

::google::protobuf::uint8* ReqPutFile::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:spaceless.protocol.ReqPutFile)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 group_id = 1;
  if (this->group_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->group_id(), target);
  }

  // string file_path = 2;
  if (this->file_path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->file_path().data(), static_cast<int>(this->file_path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "spaceless.protocol.ReqPutFile.file_path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->file_path(), target);
  }

  // .spaceless.protocol.FileFragment fragment = 3;
  if (this->has_fragment()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_fragment(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:spaceless.protocol.ReqPutFile)
  return target;
}

size_t ReqPutFile::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:spaceless.protocol.ReqPutFile)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string file_path = 2;
  if (this->file_path().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->file_path());
  }

  // .spaceless.protocol.FileFragment fragment = 3;
  if (this->has_fragment()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *fragment_);
  }

  // int32 group_id = 1;
  if (this->group_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->group_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReqPutFile::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:spaceless.protocol.ReqPutFile)
  GOOGLE_DCHECK_NE(&from, this);
  const ReqPutFile* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReqPutFile>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:spaceless.protocol.ReqPutFile)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:spaceless.protocol.ReqPutFile)
    MergeFrom(*source);
  }
}

void ReqPutFile::MergeFrom(const ReqPutFile& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:spaceless.protocol.ReqPutFile)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.file_path().size() > 0) {

    file_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_path_);
  }
  if (from.has_fragment()) {
    mutable_fragment()->::spaceless::protocol::FileFragment::MergeFrom(from.fragment());
  }
  if (from.group_id() != 0) {
    set_group_id(from.group_id());
  }
}

void ReqPutFile::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:spaceless.protocol.ReqPutFile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReqPutFile::CopyFrom(const ReqPutFile& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:spaceless.protocol.ReqPutFile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReqPutFile::IsInitialized() const {
  return true;
}

void ReqPutFile::Swap(ReqPutFile* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReqPutFile::InternalSwap(ReqPutFile* other) {
  using std::swap;
  file_path_.Swap(&other->file_path_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(fragment_, other->fragment_);
  swap(group_id_, other->group_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ReqPutFile::GetMetadata() const {
  protobuf_protocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RspPutFile::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RspPutFile::kResultFieldNumber;
const int RspPutFile::kFragmentIndexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RspPutFile::RspPutFile()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protocol_2eproto::scc_info_RspPutFile.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:spaceless.protocol.RspPutFile)
}
RspPutFile::RspPutFile(const RspPutFile& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&result_, &from.result_,
    static_cast<size_t>(reinterpret_cast<char*>(&fragment_index_) -
    reinterpret_cast<char*>(&result_)) + sizeof(fragment_index_));
  // @@protoc_insertion_point(copy_constructor:spaceless.protocol.RspPutFile)
}

void RspPutFile::SharedCtor() {
  ::memset(&result_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&fragment_index_) -
      reinterpret_cast<char*>(&result_)) + sizeof(fragment_index_));
}

RspPutFile::~RspPutFile() {
  // @@protoc_insertion_point(destructor:spaceless.protocol.RspPutFile)
  SharedDtor();
}

void RspPutFile::SharedDtor() {
}

void RspPutFile::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RspPutFile::descriptor() {
  ::protobuf_protocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RspPutFile& RspPutFile::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protocol_2eproto::scc_info_RspPutFile.base);
  return *internal_default_instance();
}


void RspPutFile::Clear() {
// @@protoc_insertion_point(message_clear_start:spaceless.protocol.RspPutFile)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&result_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&fragment_index_) -
      reinterpret_cast<char*>(&result_)) + sizeof(fragment_index_));
  _internal_metadata_.Clear();
}

bool RspPutFile::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:spaceless.protocol.RspPutFile)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 fragment_index = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &fragment_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:spaceless.protocol.RspPutFile)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:spaceless.protocol.RspPutFile)
  return false;
#undef DO_
}

void RspPutFile::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:spaceless.protocol.RspPutFile)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 result = 1;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // int32 fragment_index = 2;
  if (this->fragment_index() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->fragment_index(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:spaceless.protocol.RspPutFile)
}

::google::protobuf::uint8* RspPutFile::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:spaceless.protocol.RspPutFile)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 result = 1;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // int32 fragment_index = 2;
  if (this->fragment_index() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->fragment_index(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:spaceless.protocol.RspPutFile)
  return target;
}

size_t RspPutFile::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:spaceless.protocol.RspPutFile)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 result = 1;
  if (this->result() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->result());
  }

  // int32 fragment_index = 2;
  if (this->fragment_index() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->fragment_index());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RspPutFile::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:spaceless.protocol.RspPutFile)
  GOOGLE_DCHECK_NE(&from, this);
  const RspPutFile* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RspPutFile>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:spaceless.protocol.RspPutFile)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:spaceless.protocol.RspPutFile)
    MergeFrom(*source);
  }
}

void RspPutFile::MergeFrom(const RspPutFile& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:spaceless.protocol.RspPutFile)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    set_result(from.result());
  }
  if (from.fragment_index() != 0) {
    set_fragment_index(from.fragment_index());
  }
}

void RspPutFile::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:spaceless.protocol.RspPutFile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RspPutFile::CopyFrom(const RspPutFile& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:spaceless.protocol.RspPutFile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RspPutFile::IsInitialized() const {
  return true;
}

void RspPutFile::Swap(RspPutFile* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RspPutFile::InternalSwap(RspPutFile* other) {
  using std::swap;
  swap(result_, other->result_);
  swap(fragment_index_, other->fragment_index_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RspPutFile::GetMetadata() const {
  protobuf_protocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ReqGetFile::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReqGetFile::kGroupIdFieldNumber;
const int ReqGetFile::kFilePathFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReqGetFile::ReqGetFile()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protocol_2eproto::scc_info_ReqGetFile.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:spaceless.protocol.ReqGetFile)
}
ReqGetFile::ReqGetFile(const ReqGetFile& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  file_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.file_path().size() > 0) {
    file_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_path_);
  }
  group_id_ = from.group_id_;
  // @@protoc_insertion_point(copy_constructor:spaceless.protocol.ReqGetFile)
}

void ReqGetFile::SharedCtor() {
  file_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  group_id_ = 0;
}

ReqGetFile::~ReqGetFile() {
  // @@protoc_insertion_point(destructor:spaceless.protocol.ReqGetFile)
  SharedDtor();
}

void ReqGetFile::SharedDtor() {
  file_path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ReqGetFile::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ReqGetFile::descriptor() {
  ::protobuf_protocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ReqGetFile& ReqGetFile::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protocol_2eproto::scc_info_ReqGetFile.base);
  return *internal_default_instance();
}


void ReqGetFile::Clear() {
// @@protoc_insertion_point(message_clear_start:spaceless.protocol.ReqGetFile)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  file_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  group_id_ = 0;
  _internal_metadata_.Clear();
}

bool ReqGetFile::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:spaceless.protocol.ReqGetFile)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 group_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &group_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string file_path = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_file_path()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->file_path().data(), static_cast<int>(this->file_path().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "spaceless.protocol.ReqGetFile.file_path"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:spaceless.protocol.ReqGetFile)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:spaceless.protocol.ReqGetFile)
  return false;
#undef DO_
}

void ReqGetFile::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:spaceless.protocol.ReqGetFile)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 group_id = 1;
  if (this->group_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->group_id(), output);
  }

  // string file_path = 2;
  if (this->file_path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->file_path().data(), static_cast<int>(this->file_path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "spaceless.protocol.ReqGetFile.file_path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->file_path(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:spaceless.protocol.ReqGetFile)
}

::google::protobuf::uint8* ReqGetFile::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:spaceless.protocol.ReqGetFile)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 group_id = 1;
  if (this->group_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->group_id(), target);
  }

  // string file_path = 2;
  if (this->file_path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->file_path().data(), static_cast<int>(this->file_path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "spaceless.protocol.ReqGetFile.file_path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->file_path(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:spaceless.protocol.ReqGetFile)
  return target;
}

size_t ReqGetFile::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:spaceless.protocol.ReqGetFile)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string file_path = 2;
  if (this->file_path().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->file_path());
  }

  // int32 group_id = 1;
  if (this->group_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->group_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReqGetFile::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:spaceless.protocol.ReqGetFile)
  GOOGLE_DCHECK_NE(&from, this);
  const ReqGetFile* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReqGetFile>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:spaceless.protocol.ReqGetFile)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:spaceless.protocol.ReqGetFile)
    MergeFrom(*source);
  }
}

void ReqGetFile::MergeFrom(const ReqGetFile& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:spaceless.protocol.ReqGetFile)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.file_path().size() > 0) {

    file_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_path_);
  }
  if (from.group_id() != 0) {
    set_group_id(from.group_id());
  }
}

void ReqGetFile::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:spaceless.protocol.ReqGetFile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReqGetFile::CopyFrom(const ReqGetFile& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:spaceless.protocol.ReqGetFile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReqGetFile::IsInitialized() const {
  return true;
}

void ReqGetFile::Swap(ReqGetFile* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReqGetFile::InternalSwap(ReqGetFile* other) {
  using std::swap;
  file_path_.Swap(&other->file_path_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(group_id_, other->group_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ReqGetFile::GetMetadata() const {
  protobuf_protocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RspGetFile::InitAsDefaultInstance() {
  ::spaceless::protocol::_RspGetFile_default_instance_._instance.get_mutable()->fragment_ = const_cast< ::spaceless::protocol::FileFragment*>(
      ::spaceless::protocol::FileFragment::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RspGetFile::kResultFieldNumber;
const int RspGetFile::kFragmentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RspGetFile::RspGetFile()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protocol_2eproto::scc_info_RspGetFile.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:spaceless.protocol.RspGetFile)
}
RspGetFile::RspGetFile(const RspGetFile& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_fragment()) {
    fragment_ = new ::spaceless::protocol::FileFragment(*from.fragment_);
  } else {
    fragment_ = NULL;
  }
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:spaceless.protocol.RspGetFile)
}

void RspGetFile::SharedCtor() {
  ::memset(&fragment_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&result_) -
      reinterpret_cast<char*>(&fragment_)) + sizeof(result_));
}

RspGetFile::~RspGetFile() {
  // @@protoc_insertion_point(destructor:spaceless.protocol.RspGetFile)
  SharedDtor();
}

void RspGetFile::SharedDtor() {
  if (this != internal_default_instance()) delete fragment_;
}

void RspGetFile::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RspGetFile::descriptor() {
  ::protobuf_protocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RspGetFile& RspGetFile::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protocol_2eproto::scc_info_RspGetFile.base);
  return *internal_default_instance();
}


void RspGetFile::Clear() {
// @@protoc_insertion_point(message_clear_start:spaceless.protocol.RspGetFile)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && fragment_ != NULL) {
    delete fragment_;
  }
  fragment_ = NULL;
  result_ = 0;
  _internal_metadata_.Clear();
}

bool RspGetFile::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:spaceless.protocol.RspGetFile)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .spaceless.protocol.FileFragment fragment = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_fragment()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:spaceless.protocol.RspGetFile)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:spaceless.protocol.RspGetFile)
  return false;
#undef DO_
}

void RspGetFile::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:spaceless.protocol.RspGetFile)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 result = 1;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // .spaceless.protocol.FileFragment fragment = 2;
  if (this->has_fragment()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_fragment(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:spaceless.protocol.RspGetFile)
}

::google::protobuf::uint8* RspGetFile::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:spaceless.protocol.RspGetFile)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 result = 1;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // .spaceless.protocol.FileFragment fragment = 2;
  if (this->has_fragment()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_fragment(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:spaceless.protocol.RspGetFile)
  return target;
}

size_t RspGetFile::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:spaceless.protocol.RspGetFile)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .spaceless.protocol.FileFragment fragment = 2;
  if (this->has_fragment()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *fragment_);
  }

  // int32 result = 1;
  if (this->result() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RspGetFile::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:spaceless.protocol.RspGetFile)
  GOOGLE_DCHECK_NE(&from, this);
  const RspGetFile* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RspGetFile>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:spaceless.protocol.RspGetFile)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:spaceless.protocol.RspGetFile)
    MergeFrom(*source);
  }
}

void RspGetFile::MergeFrom(const RspGetFile& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:spaceless.protocol.RspGetFile)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_fragment()) {
    mutable_fragment()->::spaceless::protocol::FileFragment::MergeFrom(from.fragment());
  }
  if (from.result() != 0) {
    set_result(from.result());
  }
}

void RspGetFile::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:spaceless.protocol.RspGetFile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RspGetFile::CopyFrom(const RspGetFile& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:spaceless.protocol.RspGetFile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RspGetFile::IsInitialized() const {
  return true;
}

void RspGetFile::Swap(RspGetFile* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RspGetFile::InternalSwap(RspGetFile* other) {
  using std::swap;
  swap(fragment_, other->fragment_);
  swap(result_, other->result_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RspGetFile::GetMetadata() const {
  protobuf_protocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ReqCreatePath::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReqCreatePath::kGroupIdFieldNumber;
const int ReqCreatePath::kPathFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReqCreatePath::ReqCreatePath()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protocol_2eproto::scc_info_ReqCreatePath.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:spaceless.protocol.ReqCreatePath)
}
ReqCreatePath::ReqCreatePath(const ReqCreatePath& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.path().size() > 0) {
    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
  group_id_ = from.group_id_;
  // @@protoc_insertion_point(copy_constructor:spaceless.protocol.ReqCreatePath)
}

void ReqCreatePath::SharedCtor() {
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  group_id_ = 0;
}

ReqCreatePath::~ReqCreatePath() {
  // @@protoc_insertion_point(destructor:spaceless.protocol.ReqCreatePath)
  SharedDtor();
}

void ReqCreatePath::SharedDtor() {
  path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ReqCreatePath::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ReqCreatePath::descriptor() {
  ::protobuf_protocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ReqCreatePath& ReqCreatePath::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protocol_2eproto::scc_info_ReqCreatePath.base);
  return *internal_default_instance();
}


void ReqCreatePath::Clear() {
// @@protoc_insertion_point(message_clear_start:spaceless.protocol.ReqCreatePath)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  group_id_ = 0;
  _internal_metadata_.Clear();
}

bool ReqCreatePath::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:spaceless.protocol.ReqCreatePath)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 group_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &group_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string path = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_path()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->path().data(), static_cast<int>(this->path().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "spaceless.protocol.ReqCreatePath.path"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:spaceless.protocol.ReqCreatePath)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:spaceless.protocol.ReqCreatePath)
  return false;
#undef DO_
}

void ReqCreatePath::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:spaceless.protocol.ReqCreatePath)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 group_id = 1;
  if (this->group_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->group_id(), output);
  }

  // string path = 2;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "spaceless.protocol.ReqCreatePath.path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->path(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:spaceless.protocol.ReqCreatePath)
}

::google::protobuf::uint8* ReqCreatePath::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:spaceless.protocol.ReqCreatePath)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 group_id = 1;
  if (this->group_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->group_id(), target);
  }

  // string path = 2;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "spaceless.protocol.ReqCreatePath.path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->path(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:spaceless.protocol.ReqCreatePath)
  return target;
}

size_t ReqCreatePath::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:spaceless.protocol.ReqCreatePath)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string path = 2;
  if (this->path().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->path());
  }

  // int32 group_id = 1;
  if (this->group_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->group_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReqCreatePath::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:spaceless.protocol.ReqCreatePath)
  GOOGLE_DCHECK_NE(&from, this);
  const ReqCreatePath* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReqCreatePath>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:spaceless.protocol.ReqCreatePath)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:spaceless.protocol.ReqCreatePath)
    MergeFrom(*source);
  }
}

void ReqCreatePath::MergeFrom(const ReqCreatePath& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:spaceless.protocol.ReqCreatePath)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.path().size() > 0) {

    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
  if (from.group_id() != 0) {
    set_group_id(from.group_id());
  }
}

void ReqCreatePath::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:spaceless.protocol.ReqCreatePath)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReqCreatePath::CopyFrom(const ReqCreatePath& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:spaceless.protocol.ReqCreatePath)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReqCreatePath::IsInitialized() const {
  return true;
}

void ReqCreatePath::Swap(ReqCreatePath* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReqCreatePath::InternalSwap(ReqCreatePath* other) {
  using std::swap;
  path_.Swap(&other->path_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(group_id_, other->group_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ReqCreatePath::GetMetadata() const {
  protobuf_protocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RspCreatePath::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RspCreatePath::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RspCreatePath::RspCreatePath()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protocol_2eproto::scc_info_RspCreatePath.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:spaceless.protocol.RspCreatePath)
}
RspCreatePath::RspCreatePath(const RspCreatePath& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:spaceless.protocol.RspCreatePath)
}

void RspCreatePath::SharedCtor() {
  result_ = 0;
}

RspCreatePath::~RspCreatePath() {
  // @@protoc_insertion_point(destructor:spaceless.protocol.RspCreatePath)
  SharedDtor();
}

void RspCreatePath::SharedDtor() {
}

void RspCreatePath::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RspCreatePath::descriptor() {
  ::protobuf_protocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RspCreatePath& RspCreatePath::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protocol_2eproto::scc_info_RspCreatePath.base);
  return *internal_default_instance();
}


void RspCreatePath::Clear() {
// @@protoc_insertion_point(message_clear_start:spaceless.protocol.RspCreatePath)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = 0;
  _internal_metadata_.Clear();
}

bool RspCreatePath::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:spaceless.protocol.RspCreatePath)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:spaceless.protocol.RspCreatePath)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:spaceless.protocol.RspCreatePath)
  return false;
#undef DO_
}

void RspCreatePath::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:spaceless.protocol.RspCreatePath)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 result = 1;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:spaceless.protocol.RspCreatePath)
}

::google::protobuf::uint8* RspCreatePath::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:spaceless.protocol.RspCreatePath)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 result = 1;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:spaceless.protocol.RspCreatePath)
  return target;
}

size_t RspCreatePath::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:spaceless.protocol.RspCreatePath)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 result = 1;
  if (this->result() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RspCreatePath::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:spaceless.protocol.RspCreatePath)
  GOOGLE_DCHECK_NE(&from, this);
  const RspCreatePath* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RspCreatePath>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:spaceless.protocol.RspCreatePath)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:spaceless.protocol.RspCreatePath)
    MergeFrom(*source);
  }
}

void RspCreatePath::MergeFrom(const RspCreatePath& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:spaceless.protocol.RspCreatePath)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    set_result(from.result());
  }
}

void RspCreatePath::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:spaceless.protocol.RspCreatePath)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RspCreatePath::CopyFrom(const RspCreatePath& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:spaceless.protocol.RspCreatePath)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RspCreatePath::IsInitialized() const {
  return true;
}

void RspCreatePath::Swap(RspCreatePath* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RspCreatePath::InternalSwap(RspCreatePath* other) {
  using std::swap;
  swap(result_, other->result_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RspCreatePath::GetMetadata() const {
  protobuf_protocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ReqRemovePath::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReqRemovePath::kGroupIdFieldNumber;
const int ReqRemovePath::kPathFieldNumber;
const int ReqRemovePath::kForceRemoveAllFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReqRemovePath::ReqRemovePath()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protocol_2eproto::scc_info_ReqRemovePath.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:spaceless.protocol.ReqRemovePath)
}
ReqRemovePath::ReqRemovePath(const ReqRemovePath& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.path().size() > 0) {
    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
  ::memcpy(&group_id_, &from.group_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&force_remove_all_) -
    reinterpret_cast<char*>(&group_id_)) + sizeof(force_remove_all_));
  // @@protoc_insertion_point(copy_constructor:spaceless.protocol.ReqRemovePath)
}

void ReqRemovePath::SharedCtor() {
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&group_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&force_remove_all_) -
      reinterpret_cast<char*>(&group_id_)) + sizeof(force_remove_all_));
}

ReqRemovePath::~ReqRemovePath() {
  // @@protoc_insertion_point(destructor:spaceless.protocol.ReqRemovePath)
  SharedDtor();
}

void ReqRemovePath::SharedDtor() {
  path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ReqRemovePath::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ReqRemovePath::descriptor() {
  ::protobuf_protocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ReqRemovePath& ReqRemovePath::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protocol_2eproto::scc_info_ReqRemovePath.base);
  return *internal_default_instance();
}


void ReqRemovePath::Clear() {
// @@protoc_insertion_point(message_clear_start:spaceless.protocol.ReqRemovePath)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&group_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&force_remove_all_) -
      reinterpret_cast<char*>(&group_id_)) + sizeof(force_remove_all_));
  _internal_metadata_.Clear();
}

bool ReqRemovePath::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:spaceless.protocol.ReqRemovePath)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 group_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &group_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string path = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_path()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->path().data(), static_cast<int>(this->path().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "spaceless.protocol.ReqRemovePath.path"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool force_remove_all = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &force_remove_all_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:spaceless.protocol.ReqRemovePath)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:spaceless.protocol.ReqRemovePath)
  return false;
#undef DO_
}

void ReqRemovePath::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:spaceless.protocol.ReqRemovePath)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 group_id = 1;
  if (this->group_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->group_id(), output);
  }

  // string path = 2;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "spaceless.protocol.ReqRemovePath.path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->path(), output);
  }

  // bool force_remove_all = 3;
  if (this->force_remove_all() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->force_remove_all(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:spaceless.protocol.ReqRemovePath)
}

::google::protobuf::uint8* ReqRemovePath::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:spaceless.protocol.ReqRemovePath)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 group_id = 1;
  if (this->group_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->group_id(), target);
  }

  // string path = 2;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "spaceless.protocol.ReqRemovePath.path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->path(), target);
  }

  // bool force_remove_all = 3;
  if (this->force_remove_all() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->force_remove_all(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:spaceless.protocol.ReqRemovePath)
  return target;
}

size_t ReqRemovePath::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:spaceless.protocol.ReqRemovePath)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string path = 2;
  if (this->path().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->path());
  }

  // int32 group_id = 1;
  if (this->group_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->group_id());
  }

  // bool force_remove_all = 3;
  if (this->force_remove_all() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReqRemovePath::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:spaceless.protocol.ReqRemovePath)
  GOOGLE_DCHECK_NE(&from, this);
  const ReqRemovePath* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReqRemovePath>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:spaceless.protocol.ReqRemovePath)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:spaceless.protocol.ReqRemovePath)
    MergeFrom(*source);
  }
}

void ReqRemovePath::MergeFrom(const ReqRemovePath& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:spaceless.protocol.ReqRemovePath)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.path().size() > 0) {

    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
  if (from.group_id() != 0) {
    set_group_id(from.group_id());
  }
  if (from.force_remove_all() != 0) {
    set_force_remove_all(from.force_remove_all());
  }
}

void ReqRemovePath::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:spaceless.protocol.ReqRemovePath)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReqRemovePath::CopyFrom(const ReqRemovePath& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:spaceless.protocol.ReqRemovePath)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReqRemovePath::IsInitialized() const {
  return true;
}

void ReqRemovePath::Swap(ReqRemovePath* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReqRemovePath::InternalSwap(ReqRemovePath* other) {
  using std::swap;
  path_.Swap(&other->path_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(group_id_, other->group_id_);
  swap(force_remove_all_, other->force_remove_all_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ReqRemovePath::GetMetadata() const {
  protobuf_protocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RspRemovePath::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RspRemovePath::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RspRemovePath::RspRemovePath()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protocol_2eproto::scc_info_RspRemovePath.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:spaceless.protocol.RspRemovePath)
}
RspRemovePath::RspRemovePath(const RspRemovePath& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:spaceless.protocol.RspRemovePath)
}

void RspRemovePath::SharedCtor() {
  result_ = 0;
}

RspRemovePath::~RspRemovePath() {
  // @@protoc_insertion_point(destructor:spaceless.protocol.RspRemovePath)
  SharedDtor();
}

void RspRemovePath::SharedDtor() {
}

void RspRemovePath::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RspRemovePath::descriptor() {
  ::protobuf_protocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RspRemovePath& RspRemovePath::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protocol_2eproto::scc_info_RspRemovePath.base);
  return *internal_default_instance();
}


void RspRemovePath::Clear() {
// @@protoc_insertion_point(message_clear_start:spaceless.protocol.RspRemovePath)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = 0;
  _internal_metadata_.Clear();
}

bool RspRemovePath::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:spaceless.protocol.RspRemovePath)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:spaceless.protocol.RspRemovePath)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:spaceless.protocol.RspRemovePath)
  return false;
#undef DO_
}

void RspRemovePath::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:spaceless.protocol.RspRemovePath)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 result = 1;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:spaceless.protocol.RspRemovePath)
}

::google::protobuf::uint8* RspRemovePath::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:spaceless.protocol.RspRemovePath)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 result = 1;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:spaceless.protocol.RspRemovePath)
  return target;
}

size_t RspRemovePath::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:spaceless.protocol.RspRemovePath)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 result = 1;
  if (this->result() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RspRemovePath::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:spaceless.protocol.RspRemovePath)
  GOOGLE_DCHECK_NE(&from, this);
  const RspRemovePath* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RspRemovePath>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:spaceless.protocol.RspRemovePath)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:spaceless.protocol.RspRemovePath)
    MergeFrom(*source);
  }
}

void RspRemovePath::MergeFrom(const RspRemovePath& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:spaceless.protocol.RspRemovePath)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    set_result(from.result());
  }
}

void RspRemovePath::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:spaceless.protocol.RspRemovePath)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RspRemovePath::CopyFrom(const RspRemovePath& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:spaceless.protocol.RspRemovePath)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RspRemovePath::IsInitialized() const {
  return true;
}

void RspRemovePath::Swap(RspRemovePath* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RspRemovePath::InternalSwap(RspRemovePath* other) {
  using std::swap;
  swap(result_, other->result_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RspRemovePath::GetMetadata() const {
  protobuf_protocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace protocol
}  // namespace spaceless
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::spaceless::protocol::RspError* Arena::CreateMaybeMessage< ::spaceless::protocol::RspError >(Arena* arena) {
  return Arena::CreateInternal< ::spaceless::protocol::RspError >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::spaceless::protocol::User* Arena::CreateMaybeMessage< ::spaceless::protocol::User >(Arena* arena) {
  return Arena::CreateInternal< ::spaceless::protocol::User >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::spaceless::protocol::ReqRegisterUser* Arena::CreateMaybeMessage< ::spaceless::protocol::ReqRegisterUser >(Arena* arena) {
  return Arena::CreateInternal< ::spaceless::protocol::ReqRegisterUser >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::spaceless::protocol::RspRegisterUser* Arena::CreateMaybeMessage< ::spaceless::protocol::RspRegisterUser >(Arena* arena) {
  return Arena::CreateInternal< ::spaceless::protocol::RspRegisterUser >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::spaceless::protocol::ReqLoginUser* Arena::CreateMaybeMessage< ::spaceless::protocol::ReqLoginUser >(Arena* arena) {
  return Arena::CreateInternal< ::spaceless::protocol::ReqLoginUser >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::spaceless::protocol::RspLoginUser* Arena::CreateMaybeMessage< ::spaceless::protocol::RspLoginUser >(Arena* arena) {
  return Arena::CreateInternal< ::spaceless::protocol::RspLoginUser >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::spaceless::protocol::ReqRemoveUser* Arena::CreateMaybeMessage< ::spaceless::protocol::ReqRemoveUser >(Arena* arena) {
  return Arena::CreateInternal< ::spaceless::protocol::ReqRemoveUser >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::spaceless::protocol::RspRemoveUser* Arena::CreateMaybeMessage< ::spaceless::protocol::RspRemoveUser >(Arena* arena) {
  return Arena::CreateInternal< ::spaceless::protocol::RspRemoveUser >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::spaceless::protocol::ReqFindUser* Arena::CreateMaybeMessage< ::spaceless::protocol::ReqFindUser >(Arena* arena) {
  return Arena::CreateInternal< ::spaceless::protocol::ReqFindUser >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::spaceless::protocol::RspFindUser* Arena::CreateMaybeMessage< ::spaceless::protocol::RspFindUser >(Arena* arena) {
  return Arena::CreateInternal< ::spaceless::protocol::RspFindUser >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::spaceless::protocol::SharingGroup* Arena::CreateMaybeMessage< ::spaceless::protocol::SharingGroup >(Arena* arena) {
  return Arena::CreateInternal< ::spaceless::protocol::SharingGroup >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::spaceless::protocol::ReqRegisterGroup* Arena::CreateMaybeMessage< ::spaceless::protocol::ReqRegisterGroup >(Arena* arena) {
  return Arena::CreateInternal< ::spaceless::protocol::ReqRegisterGroup >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::spaceless::protocol::RspRegisterGroup* Arena::CreateMaybeMessage< ::spaceless::protocol::RspRegisterGroup >(Arena* arena) {
  return Arena::CreateInternal< ::spaceless::protocol::RspRegisterGroup >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::spaceless::protocol::ReqRemoveGroup* Arena::CreateMaybeMessage< ::spaceless::protocol::ReqRemoveGroup >(Arena* arena) {
  return Arena::CreateInternal< ::spaceless::protocol::ReqRemoveGroup >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::spaceless::protocol::RspRemoveGroup* Arena::CreateMaybeMessage< ::spaceless::protocol::RspRemoveGroup >(Arena* arena) {
  return Arena::CreateInternal< ::spaceless::protocol::RspRemoveGroup >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::spaceless::protocol::ReqFindGroup* Arena::CreateMaybeMessage< ::spaceless::protocol::ReqFindGroup >(Arena* arena) {
  return Arena::CreateInternal< ::spaceless::protocol::ReqFindGroup >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::spaceless::protocol::RspFindGroup* Arena::CreateMaybeMessage< ::spaceless::protocol::RspFindGroup >(Arena* arena) {
  return Arena::CreateInternal< ::spaceless::protocol::RspFindGroup >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::spaceless::protocol::ReqJoinGroup* Arena::CreateMaybeMessage< ::spaceless::protocol::ReqJoinGroup >(Arena* arena) {
  return Arena::CreateInternal< ::spaceless::protocol::ReqJoinGroup >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::spaceless::protocol::RspJoinGroup* Arena::CreateMaybeMessage< ::spaceless::protocol::RspJoinGroup >(Arena* arena) {
  return Arena::CreateInternal< ::spaceless::protocol::RspJoinGroup >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::spaceless::protocol::ReqAssignAsManager* Arena::CreateMaybeMessage< ::spaceless::protocol::ReqAssignAsManager >(Arena* arena) {
  return Arena::CreateInternal< ::spaceless::protocol::ReqAssignAsManager >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::spaceless::protocol::RspAssignAsManager* Arena::CreateMaybeMessage< ::spaceless::protocol::RspAssignAsManager >(Arena* arena) {
  return Arena::CreateInternal< ::spaceless::protocol::RspAssignAsManager >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::spaceless::protocol::ReqAssignAsMemeber* Arena::CreateMaybeMessage< ::spaceless::protocol::ReqAssignAsMemeber >(Arena* arena) {
  return Arena::CreateInternal< ::spaceless::protocol::ReqAssignAsMemeber >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::spaceless::protocol::RspAssignAsMemeber* Arena::CreateMaybeMessage< ::spaceless::protocol::RspAssignAsMemeber >(Arena* arena) {
  return Arena::CreateInternal< ::spaceless::protocol::RspAssignAsMemeber >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::spaceless::protocol::ReqKickOutUser* Arena::CreateMaybeMessage< ::spaceless::protocol::ReqKickOutUser >(Arena* arena) {
  return Arena::CreateInternal< ::spaceless::protocol::ReqKickOutUser >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::spaceless::protocol::RspKickOutUser* Arena::CreateMaybeMessage< ::spaceless::protocol::RspKickOutUser >(Arena* arena) {
  return Arena::CreateInternal< ::spaceless::protocol::RspKickOutUser >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::spaceless::protocol::FileFragment* Arena::CreateMaybeMessage< ::spaceless::protocol::FileFragment >(Arena* arena) {
  return Arena::CreateInternal< ::spaceless::protocol::FileFragment >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::spaceless::protocol::ReqPutFile* Arena::CreateMaybeMessage< ::spaceless::protocol::ReqPutFile >(Arena* arena) {
  return Arena::CreateInternal< ::spaceless::protocol::ReqPutFile >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::spaceless::protocol::RspPutFile* Arena::CreateMaybeMessage< ::spaceless::protocol::RspPutFile >(Arena* arena) {
  return Arena::CreateInternal< ::spaceless::protocol::RspPutFile >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::spaceless::protocol::ReqGetFile* Arena::CreateMaybeMessage< ::spaceless::protocol::ReqGetFile >(Arena* arena) {
  return Arena::CreateInternal< ::spaceless::protocol::ReqGetFile >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::spaceless::protocol::RspGetFile* Arena::CreateMaybeMessage< ::spaceless::protocol::RspGetFile >(Arena* arena) {
  return Arena::CreateInternal< ::spaceless::protocol::RspGetFile >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::spaceless::protocol::ReqCreatePath* Arena::CreateMaybeMessage< ::spaceless::protocol::ReqCreatePath >(Arena* arena) {
  return Arena::CreateInternal< ::spaceless::protocol::ReqCreatePath >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::spaceless::protocol::RspCreatePath* Arena::CreateMaybeMessage< ::spaceless::protocol::RspCreatePath >(Arena* arena) {
  return Arena::CreateInternal< ::spaceless::protocol::RspCreatePath >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::spaceless::protocol::ReqRemovePath* Arena::CreateMaybeMessage< ::spaceless::protocol::ReqRemovePath >(Arena* arena) {
  return Arena::CreateInternal< ::spaceless::protocol::ReqRemovePath >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::spaceless::protocol::RspRemovePath* Arena::CreateMaybeMessage< ::spaceless::protocol::RspRemovePath >(Arena* arena) {
  return Arena::CreateInternal< ::spaceless::protocol::RspRemovePath >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
